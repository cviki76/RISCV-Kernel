GAS LISTING /tmp/ccxGaL4a.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv9privilegeEv
   9              	_ZN5Riscv9privilegeEv:
  10              	.LFB39:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../h/tcb.hpp"
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** #include "../test/printing.hpp"
   5:src/riscv.cpp **** #include "../h/_sem.hpp"
   6:src/riscv.cpp **** #include "../lib/hw.h"
   7:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::privilege() {
  12              		.loc 1 9 25
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/riscv.cpp ****     if (TCB::running->systemThread) {
  20              		.loc 1 10 5
  21              		.loc 1 10 23 is_stmt 0
  22 000c 97070000 		la	a5,_ZN3TCB7runningE
  22      83B70700 
  23 0014 83B70700 		ld	a5,0(a5)
  24 0018 83C74703 		lbu	a5,52(a5)
  25              		.loc 1 10 5
  26 001c 638C0700 		beqz	a5,.L2
  11:src/riscv.cpp ****         ms_sstatus(SSTATUS_SPP);
  27              		.loc 1 11 9 is_stmt 1
  28              	.LVL0:
  29              	.LBB73:
  30              	.LBB74:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   2:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** class Riscv
   9:src/../h/riscv.hpp **** {
  10:src/../h/riscv.hpp **** public:
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // read register scause
GAS LISTING /tmp/ccxGaL4a.s 			page 2


  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // write register scause
  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // read register sepc
  22:src/../h/riscv.hpp ****     static uint64 r_sepc();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // write register sepc
  25:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // read register stvec
  28:src/../h/riscv.hpp ****     static uint64 r_stvec();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // write register stvec
  31:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register stval
  34:src/../h/riscv.hpp ****     static uint64 r_stval();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register stval
  37:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     enum BitMaskSip
  40:src/../h/riscv.hpp ****     {
  41:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  42:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  43:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  44:src/../h/riscv.hpp ****     };
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // mask set register sip
  47:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // mask clear register sip
  50:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // read register sip
  53:src/../h/riscv.hpp ****     static uint64 r_sip();
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     // write register sip
  56:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     enum BitMaskSstatus
  59:src/../h/riscv.hpp ****     {
  60:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  61:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  62:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  63:src/../h/riscv.hpp ****     };
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask set register sstatus
  66:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // mask clear register sstatus
  69:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // read register sstatus
  72:src/../h/riscv.hpp ****     static uint64 r_sstatus();
GAS LISTING /tmp/ccxGaL4a.s 			page 3


  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // write register sstatus
  75:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // supervisor trap
  78:src/../h/riscv.hpp ****     static void supervisorTrap();
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     static void privilege();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     static void loadArgsFromRegs(uint64 *arguments);
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     static void w_retval(uint64);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     static uint64 systemCall(uint64* args);
  92:src/../h/riscv.hpp **** };
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  95:src/../h/riscv.hpp **** {
  96:src/../h/riscv.hpp ****     uint64 volatile scause;
  97:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  98:src/../h/riscv.hpp ****     return scause;
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 104:src/../h/riscv.hpp **** }
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 107:src/../h/riscv.hpp **** {
 108:src/../h/riscv.hpp ****     uint64 volatile sepc;
 109:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 110:src/../h/riscv.hpp ****     return sepc;
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     uint64 volatile stvec;
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 122:src/../h/riscv.hpp ****     return stvec;
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccxGaL4a.s 			page 4


 130:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     uint64 volatile stval;
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 134:src/../h/riscv.hpp ****     return stval;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     uint64 volatile sip;
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 156:src/../h/riscv.hpp ****     return sip;
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 165:src/../h/riscv.hpp **** {
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  32              		.loc 2 166 5
  33              		.loc 2 166 68 is_stmt 0
  34 0020 93070010 		li	a5,256
  35              	#APP
  36              	# 166 "src/../h/riscv.hpp" 1
 167              	}
  37              		csrs sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.L1:
  42              	.LBE74:
  43              	.LBE73:
  12:src/riscv.cpp ****     } else {
  13:src/riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
  14:src/riscv.cpp ****     }
  15:src/riscv.cpp **** }
  44              		.loc 1 15 1
  45 0028 03348100 		ld	s0,8(sp)
  46              		.cfi_remember_state
GAS LISTING /tmp/ccxGaL4a.s 			page 5


  47              		.cfi_restore 8
  48              		.cfi_def_cfa 2, 16
  49 002c 13010101 		addi	sp,sp,16
  50              		.cfi_def_cfa_offset 0
  51 0030 67800000 		jr	ra
  52              	.L2:
  53              		.cfi_restore_state
  13:src/riscv.cpp ****     }
  54              		.loc 1 13 9 is_stmt 1
  55              	.LVL2:
  56              	.LBB75:
  57              	.LBB76:
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  58              		.loc 2 171 5
  59              		.loc 2 171 68 is_stmt 0
  60 0034 93070010 		li	a5,256
  61              	#APP
  62              	# 171 "src/../h/riscv.hpp" 1
 172              	}
  63              		csrc sstatus, a5
  64              	# 0 "" 2
  65              	.LVL3:
  66              	#NO_APP
  67              	.LBE76:
  68              	.LBE75:
  69              		.loc 1 15 1
  70 003c 6FF0DFFE 		j	.L1
  71              		.cfi_endproc
  72              	.LFE39:
  74              		.align	2
  75              		.globl	_ZN5Riscv10popSppSpieEv
  77              	_ZN5Riscv10popSppSpieEv:
  78              	.LFB40:
  16:src/riscv.cpp **** 
  17:src/riscv.cpp **** void Riscv::popSppSpie()
  18:src/riscv.cpp **** {
  79              		.loc 1 18 1 is_stmt 1
  80              		.cfi_startproc
  81 0040 130101FF 		addi	sp,sp,-16
  82              		.cfi_def_cfa_offset 16
  83 0044 23348100 		sd	s0,8(sp)
  84              		.cfi_offset 8, -8
  85 0048 13040101 		addi	s0,sp,16
  86              		.cfi_def_cfa 8, 0
  19:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  87              		.loc 1 19 5
  88              		.loc 1 19 38 is_stmt 0
  89              	#APP
  90              	# 19 "src/riscv.cpp" 1
  20              	    __asm__ volatile("sret");
  91              		csrw sepc, ra
  92              	# 0 "" 2
  93              		.loc 1 20 5 is_stmt 1
  94              		.loc 1 20 29 is_stmt 0
GAS LISTING /tmp/ccxGaL4a.s 			page 6


  95              	# 20 "src/riscv.cpp" 1
  21              	}
  96              		sret
  97              	# 0 "" 2
  98              		.loc 1 21 1
  99              	#NO_APP
 100 0054 03348100 		ld	s0,8(sp)
 101              		.cfi_restore 8
 102              		.cfi_def_cfa 2, 16
 103 0058 13010101 		addi	sp,sp,16
 104              		.cfi_def_cfa_offset 0
 105 005c 67800000 		jr	ra
 106              		.cfi_endproc
 107              	.LFE40:
 109              		.align	2
 110              		.globl	_ZN5Riscv10systemCallEPm
 112              	_ZN5Riscv10systemCallEPm:
 113              	.LFB41:
  22:src/riscv.cpp **** 
  23:src/riscv.cpp **** using Body = void(*)(void*);
  24:src/riscv.cpp **** 
  25:src/riscv.cpp **** uint64 Riscv::systemCall(uint64* args){
 114              		.loc 1 25 39 is_stmt 1
 115              		.cfi_startproc
 116              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 117              		.cfi_lsda 0x1b,.LLSDA41
 118              	.LVL4:
 119 0060 130101FC 		addi	sp,sp,-64
 120              		.cfi_def_cfa_offset 64
 121 0064 233C1102 		sd	ra,56(sp)
 122 0068 23388102 		sd	s0,48(sp)
 123 006c 23349102 		sd	s1,40(sp)
 124 0070 23302103 		sd	s2,32(sp)
 125 0074 233C3101 		sd	s3,24(sp)
 126              		.cfi_offset 1, -8
 127              		.cfi_offset 8, -16
 128              		.cfi_offset 9, -24
 129              		.cfi_offset 18, -32
 130              		.cfi_offset 19, -40
 131 0078 13040104 		addi	s0,sp,64
 132              		.cfi_def_cfa 8, 0
  26:src/riscv.cpp ****     uint64 code = (uint64)args[0];
 133              		.loc 1 26 5
 134              		.loc 1 26 12 is_stmt 0
 135 007c 83370500 		ld	a5,0(a0)
 136              	.LVL5:
  27:src/riscv.cpp **** 
  28:src/riscv.cpp ****     if(code == Cthread_create){
 137              		.loc 1 28 5 is_stmt 1
 138              	.LBB77:
 139 0080 13071001 		li	a4,17
 140 0084 638EE706 		beq	a5,a4,.L28
 141              	.LBE77:
  29:src/riscv.cpp ****         thread_t* handle = (thread_t*)args[1];
  30:src/riscv.cpp ****         Body start_routine = (Body)args[2];
  31:src/riscv.cpp ****         void* arg = (void*)args[3];
  32:src/riscv.cpp ****         uint64* stack = (uint64*)args[4];
GAS LISTING /tmp/ccxGaL4a.s 			page 7


  33:src/riscv.cpp **** 
  34:src/riscv.cpp ****         *handle = TCB::createThread(start_routine,arg,stack);
  35:src/riscv.cpp ****         if(!handle)
  36:src/riscv.cpp ****             return -3;
  37:src/riscv.cpp ****         return 0;
  38:src/riscv.cpp ****     }
  39:src/riscv.cpp ****     if(code == Cthread_createNS){
 142              		.loc 1 39 5
 143              	.LBB79:
 144 0088 13071009 		li	a4,145
 145 008c 6382E70A 		beq	a5,a4,.L29
 146              	.LBE79:
  40:src/riscv.cpp ****         thread_t* handle = (thread_t*)args[1];
  41:src/riscv.cpp ****         Body start_routine = (Body)args[2];
  42:src/riscv.cpp ****         void* arg = (void*)args[3];
  43:src/riscv.cpp ****         uint64* stack = (uint64*)args[4];
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****         *handle = TCB::createThreadNS(start_routine,arg,stack);
  46:src/riscv.cpp ****         if(!handle)
  47:src/riscv.cpp ****             return -3;
  48:src/riscv.cpp ****         return 0;
  49:src/riscv.cpp ****     }
  50:src/riscv.cpp ****     else if (code == Cthread_start)
 147              		.loc 1 50 10
 148              	.LBB160:
 149              	.LBB80:
 150 0090 13072009 		li	a4,146
 151 0094 6386E70C 		beq	a5,a4,.L30
 152              	.LBE80:
 153              	.LBE160:
  51:src/riscv.cpp ****     {
  52:src/riscv.cpp ****         thread_t handle = (thread_t)args[1];
  53:src/riscv.cpp ****         uint64 retval = handle->start();
  54:src/riscv.cpp ****         return retval;
  55:src/riscv.cpp ****     }
  56:src/riscv.cpp ****     else if(code == Cthread_exit){
 154              		.loc 1 56 10
 155              	.LBB161:
 156              	.LBB149:
 157              	.LBB81:
 158 0098 13072001 		li	a4,18
 159 009c 638AE70C 		beq	a5,a4,.L31
 160              	.LBE81:
 161              	.LBE149:
 162              	.LBE161:
  57:src/riscv.cpp ****         uint64 retval = TCB::exit();
  58:src/riscv.cpp ****         return retval;
  59:src/riscv.cpp ****     }
  60:src/riscv.cpp ****     else if(code == Cthread_dispatch){
 163              		.loc 1 60 10
 164              	.LBB162:
 165              	.LBB150:
 166              	.LBB139:
 167              	.LBB82:
 168 00a0 13073001 		li	a4,19
 169 00a4 638CE70C 		beq	a5,a4,.L32
 170              	.LBE82:
GAS LISTING /tmp/ccxGaL4a.s 			page 8


 171              	.LBE139:
 172              	.LBE150:
 173              	.LBE162:
  61:src/riscv.cpp ****         TCB::dispatch();
  62:src/riscv.cpp ****         return 0;
  63:src/riscv.cpp ****     }
  64:src/riscv.cpp ****     else if(code == Csem_open){
 174              		.loc 1 64 10
 175              	.LBB163:
 176              	.LBB151:
 177              	.LBB140:
 178              	.LBB130:
 179              	.LBB83:
 180 00a8 13071002 		li	a4,33
 181 00ac 6380E70E 		beq	a5,a4,.L33
 182              	.LBE83:
 183              	.LBE130:
 184              	.LBE140:
 185              	.LBE151:
 186              	.LBE163:
  65:src/riscv.cpp ****         sem_t* handle = (sem_t*)args[1];
  66:src/riscv.cpp ****         unsigned init = (unsigned)args[2];
  67:src/riscv.cpp **** 
  68:src/riscv.cpp ****         new _sem(handle,init);
  69:src/riscv.cpp ****         return 0;
  70:src/riscv.cpp ****     }
  71:src/riscv.cpp ****     else if(code == Csem_close){
 187              		.loc 1 71 10
 188              	.LBB164:
 189              	.LBB152:
 190              	.LBB141:
 191              	.LBB131:
 192              	.LBB123:
 193              	.LBB84:
 194 00b0 13072002 		li	a4,34
 195 00b4 6382E710 		beq	a5,a4,.L34
 196              	.LBE84:
 197              	.LBE123:
 198              	.LBE131:
 199              	.LBE141:
 200              	.LBE152:
 201              	.LBE164:
  72:src/riscv.cpp ****         sem_t handle = (sem_t)args[1];
  73:src/riscv.cpp ****         uint64 retval = handle->close();
  74:src/riscv.cpp ****         return retval;
  75:src/riscv.cpp ****     }
  76:src/riscv.cpp ****     else if(code == Csem_wait){
 202              		.loc 1 76 10
 203              	.LBB165:
 204              	.LBB153:
 205              	.LBB142:
 206              	.LBB132:
 207              	.LBB124:
 208              	.LBB111:
 209              	.LBB85:
 210 00b8 13073002 		li	a4,35
 211 00bc 6386E710 		beq	a5,a4,.L35
GAS LISTING /tmp/ccxGaL4a.s 			page 9


 212              	.LBE85:
 213              	.LBE111:
 214              	.LBE124:
 215              	.LBE132:
 216              	.LBE142:
 217              	.LBE153:
 218              	.LBE165:
  77:src/riscv.cpp ****         sem_t handle = (sem_t)args[1];
  78:src/riscv.cpp ****         uint64 retval = handle->wait();
  79:src/riscv.cpp ****         return retval;
  80:src/riscv.cpp ****     }
  81:src/riscv.cpp ****     else if(code == Csem_signal){
 219              		.loc 1 81 10
 220              	.LBB166:
 221              	.LBB154:
 222              	.LBB143:
 223              	.LBB133:
 224              	.LBB125:
 225              	.LBB112:
 226              	.LBB105:
 227              	.LBB86:
 228 00c0 13074002 		li	a4,36
 229 00c4 638AE710 		beq	a5,a4,.L36
 230              	.LBE86:
 231              	.LBE105:
 232              	.LBE112:
 233              	.LBE125:
 234              	.LBE133:
 235              	.LBE143:
 236              	.LBE154:
 237              	.LBE166:
  82:src/riscv.cpp ****         sem_t handle = (sem_t)args[1];
  83:src/riscv.cpp ****         uint64 retval = handle->signal();
  84:src/riscv.cpp ****         return retval;
  85:src/riscv.cpp ****     }
  86:src/riscv.cpp ****     else if(code == Ctime_sleep){
 238              		.loc 1 86 10
 239              	.LBB167:
 240              	.LBB155:
 241              	.LBB144:
 242              	.LBB134:
 243              	.LBB126:
 244              	.LBB113:
 245              	.LBB106:
 246              	.LBB100:
 247              	.LBB87:
 248 00c8 13071003 		li	a4,49
 249 00cc 638EE710 		beq	a5,a4,.L37
 250              	.LBE87:
 251              	.LBE100:
 252              	.LBE106:
 253              	.LBE113:
 254              	.LBE126:
 255              	.LBE134:
 256              	.LBE144:
 257              	.LBE155:
 258              	.LBE167:
GAS LISTING /tmp/ccxGaL4a.s 			page 10


  87:src/riscv.cpp ****         time_t time = (time_t)args[1];
  88:src/riscv.cpp ****         uint64 retval = TCB::time_sleep(time);
  89:src/riscv.cpp ****         return retval;
  90:src/riscv.cpp ****     }
  91:src/riscv.cpp ****     else if(code == Cmem_alloc){
 259              		.loc 1 91 10
 260              	.LBB168:
 261              	.LBB156:
 262              	.LBB145:
 263              	.LBB135:
 264              	.LBB127:
 265              	.LBB114:
 266              	.LBB107:
 267              	.LBB101:
 268              	.LBB96:
 269              	.LBB88:
 270 00d0 13071000 		li	a4,1
 271 00d4 6382E712 		beq	a5,a4,.L38
 272              	.LBE88:
 273              	.LBE96:
 274              	.LBE101:
 275              	.LBE107:
 276              	.LBE114:
 277              	.LBE127:
 278              	.LBE135:
 279              	.LBE145:
 280              	.LBE156:
 281              	.LBE168:
  92:src/riscv.cpp ****         size_t volatile size = (size_t)args[1];
  93:src/riscv.cpp ****         uint64 retval = (uint64)MemoryAllocator::alloc(size);
  94:src/riscv.cpp ****         return retval;
  95:src/riscv.cpp ****     }
  96:src/riscv.cpp ****     else if(code == Cmem_free){
 282              		.loc 1 96 10
 283              	.LBB169:
 284              	.LBB157:
 285              	.LBB146:
 286              	.LBB136:
 287              	.LBB128:
 288              	.LBB115:
 289              	.LBB108:
 290              	.LBB102:
 291              	.LBB97:
 292              	.LBB93:
 293              	.LBB89:
 294 00d8 13072000 		li	a4,2
 295 00dc 638AE712 		beq	a5,a4,.L39
 296              	.LBE89:
 297              	.LBE93:
 298              	.LBE97:
 299              	.LBE102:
 300              	.LBE108:
 301              	.LBE115:
 302              	.LBE128:
 303              	.LBE136:
 304              	.LBE146:
 305              	.LBE157:
GAS LISTING /tmp/ccxGaL4a.s 			page 11


 306              	.LBE169:
  97:src/riscv.cpp ****         void* toFree = (void*)args[1];
  98:src/riscv.cpp ****         uint64 retval = (uint64)MemoryAllocator::freee(toFree);
  99:src/riscv.cpp ****         return retval;
 100:src/riscv.cpp ****     }
 101:src/riscv.cpp **** 
 102:src/riscv.cpp ****     return -9;
 307              		.loc 1 102 13 is_stmt 0
 308 00e0 130570FF 		li	a0,-9
 309              	.LVL6:
 310              	.L7:
 103:src/riscv.cpp **** }
 311              		.loc 1 103 1
 312 00e4 83308103 		ld	ra,56(sp)
 313              		.cfi_remember_state
 314              		.cfi_restore 1
 315 00e8 03340103 		ld	s0,48(sp)
 316              		.cfi_restore 8
 317              		.cfi_def_cfa 2, 64
 318 00ec 83348102 		ld	s1,40(sp)
 319              		.cfi_restore 9
 320 00f0 03390102 		ld	s2,32(sp)
 321              		.cfi_restore 18
 322 00f4 83398101 		ld	s3,24(sp)
 323              		.cfi_restore 19
 324 00f8 13010104 		addi	sp,sp,64
 325              		.cfi_def_cfa_offset 0
 326 00fc 67800000 		jr	ra
 327              	.LVL7:
 328              	.L28:
 329              		.cfi_restore_state
 330              	.LBB170:
 331              	.LBB78:
  29:src/riscv.cpp ****         Body start_routine = (Body)args[2];
 332              		.loc 1 29 9 is_stmt 1
  29:src/riscv.cpp ****         Body start_routine = (Body)args[2];
 333              		.loc 1 29 45 is_stmt 0
 334 0100 83348500 		ld	s1,8(a0)
 335              	.LVL8:
  30:src/riscv.cpp ****         void* arg = (void*)args[3];
 336              		.loc 1 30 9 is_stmt 1
  31:src/riscv.cpp ****         uint64* stack = (uint64*)args[4];
 337              		.loc 1 31 9
  32:src/riscv.cpp **** 
 338              		.loc 1 32 9
  34:src/riscv.cpp ****         if(!handle)
 339              		.loc 1 34 9
  34:src/riscv.cpp ****         if(!handle)
 340              		.loc 1 34 36 is_stmt 0
 341 0104 03360502 		ld	a2,32(a0)
 342 0108 83358501 		ld	a1,24(a0)
 343 010c 03350501 		ld	a0,16(a0)
 344              	.LVL9:
 345              	.LEHB0:
 346 0110 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 346      E7800000 
 347              	.LVL10:
GAS LISTING /tmp/ccxGaL4a.s 			page 12


  34:src/riscv.cpp ****         if(!handle)
 348              		.loc 1 34 17
 349 0118 23B0A400 		sd	a0,0(s1)
  35:src/riscv.cpp ****             return -3;
 350              		.loc 1 35 9 is_stmt 1
 351 011c 63860400 		beqz	s1,.L40
  37:src/riscv.cpp ****     }
 352              		.loc 1 37 16 is_stmt 0
 353 0120 13050000 		li	a0,0
 354 0124 6FF01FFC 		j	.L7
 355              	.L40:
  36:src/riscv.cpp ****         return 0;
 356              		.loc 1 36 21
 357 0128 1305D0FF 		li	a0,-3
 358 012c 6FF09FFB 		j	.L7
 359              	.LVL11:
 360              	.L29:
 361              	.LBE78:
 362              	.LBE170:
 363              	.LBB171:
 364              	.LBB158:
  40:src/riscv.cpp ****         Body start_routine = (Body)args[2];
 365              		.loc 1 40 9 is_stmt 1
  40:src/riscv.cpp ****         Body start_routine = (Body)args[2];
 366              		.loc 1 40 45 is_stmt 0
 367 0130 83348500 		ld	s1,8(a0)
 368              	.LVL12:
  41:src/riscv.cpp ****         void* arg = (void*)args[3];
 369              		.loc 1 41 9 is_stmt 1
  42:src/riscv.cpp ****         uint64* stack = (uint64*)args[4];
 370              		.loc 1 42 9
  43:src/riscv.cpp **** 
 371              		.loc 1 43 9
  45:src/riscv.cpp ****         if(!handle)
 372              		.loc 1 45 9
  45:src/riscv.cpp ****         if(!handle)
 373              		.loc 1 45 38 is_stmt 0
 374 0134 03360502 		ld	a2,32(a0)
 375 0138 83358501 		ld	a1,24(a0)
 376 013c 03350501 		ld	a0,16(a0)
 377              	.LVL13:
 378 0140 97000000 		call	_ZN3TCB14createThreadNSEPFvPvES0_Pm@plt
 378      E7800000 
 379              	.LVL14:
  45:src/riscv.cpp ****         if(!handle)
 380              		.loc 1 45 17
 381 0148 23B0A400 		sd	a0,0(s1)
  46:src/riscv.cpp ****             return -3;
 382              		.loc 1 46 9 is_stmt 1
 383 014c 63860400 		beqz	s1,.L41
  48:src/riscv.cpp ****     }
 384              		.loc 1 48 16 is_stmt 0
 385 0150 13050000 		li	a0,0
 386 0154 6FF01FF9 		j	.L7
 387              	.L41:
  47:src/riscv.cpp ****         return 0;
 388              		.loc 1 47 21
GAS LISTING /tmp/ccxGaL4a.s 			page 13


 389 0158 1305D0FF 		li	a0,-3
 390 015c 6FF09FF8 		j	.L7
 391              	.LVL15:
 392              	.L30:
 393              	.LBE158:
 394              	.LBB159:
 395              	.LBB147:
  52:src/riscv.cpp ****         uint64 retval = handle->start();
 396              		.loc 1 52 9 is_stmt 1
  53:src/riscv.cpp ****         return retval;
 397              		.loc 1 53 9
  53:src/riscv.cpp ****         return retval;
 398              		.loc 1 53 38 is_stmt 0
 399 0160 03358500 		ld	a0,8(a0)
 400              	.LVL16:
 401 0164 97000000 		call	_ZN3TCB5startEv@plt
 401      E7800000 
 402              	.LVL17:
  54:src/riscv.cpp ****     }
 403              		.loc 1 54 9 is_stmt 1
  54:src/riscv.cpp ****     }
 404              		.loc 1 54 16 is_stmt 0
 405 016c 6FF09FF7 		j	.L7
 406              	.LVL18:
 407              	.L31:
 408              	.LBE147:
 409              	.LBB148:
 410              	.LBB137:
  57:src/riscv.cpp ****         return retval;
 411              		.loc 1 57 9 is_stmt 1
  57:src/riscv.cpp ****         return retval;
 412              		.loc 1 57 34 is_stmt 0
 413 0170 97000000 		call	_ZN3TCB4exitEv@plt
 413      E7800000 
 414              	.LVL19:
  58:src/riscv.cpp ****     }
 415              		.loc 1 58 9 is_stmt 1
  58:src/riscv.cpp ****     }
 416              		.loc 1 58 16 is_stmt 0
 417 0178 6FF0DFF6 		j	.L7
 418              	.LVL20:
 419              	.L32:
 420              	.LBE137:
 421              	.LBB138:
  61:src/riscv.cpp ****         return 0;
 422              		.loc 1 61 9 is_stmt 1
  61:src/riscv.cpp ****         return 0;
 423              		.loc 1 61 22 is_stmt 0
 424 017c 97000000 		call	_ZN3TCB8dispatchEv@plt
 424      E7800000 
 425              	.LVL21:
  62:src/riscv.cpp ****     }
 426              		.loc 1 62 9 is_stmt 1
  62:src/riscv.cpp ****     }
 427              		.loc 1 62 16 is_stmt 0
 428 0184 13050000 		li	a0,0
 429 0188 6FF0DFF5 		j	.L7
GAS LISTING /tmp/ccxGaL4a.s 			page 14


 430              	.LVL22:
 431              	.L33:
 432              	.LBB129:
 433              	.LBB116:
  65:src/riscv.cpp ****         unsigned init = (unsigned)args[2];
 434              		.loc 1 65 9 is_stmt 1
  65:src/riscv.cpp ****         unsigned init = (unsigned)args[2];
 435              		.loc 1 65 39 is_stmt 0
 436 018c 03398500 		ld	s2,8(a0)
 437              	.LVL23:
  66:src/riscv.cpp **** 
 438              		.loc 1 66 9 is_stmt 1
  66:src/riscv.cpp **** 
 439              		.loc 1 66 18 is_stmt 0
 440 0190 83290501 		lw	s3,16(a0)
 441              	.LVL24:
  68:src/riscv.cpp ****         return 0;
 442              		.loc 1 68 9 is_stmt 1
 443              	.LBB117:
 444              	.LBB118:
 445              		.file 3 "src/../h/_sem.hpp"
   1:src/../h/_sem.hpp **** #ifndef PROJECT_BASE__SEM_HPP
   2:src/../h/_sem.hpp **** #define PROJECT_BASE__SEM_HPP
   3:src/../h/_sem.hpp **** 
   4:src/../h/_sem.hpp **** #include "../lib/hw.h"
   5:src/../h/_sem.hpp **** #include "../h/list.hpp"
   6:src/../h/_sem.hpp **** #include "../h/tcb.hpp"
   7:src/../h/_sem.hpp **** #include "syscall_c.h"
   8:src/../h/_sem.hpp **** 
   9:src/../h/_sem.hpp **** class _sem {
  10:src/../h/_sem.hpp **** public:
  11:src/../h/_sem.hpp ****     ~_sem();
  12:src/../h/_sem.hpp **** 
  13:src/../h/_sem.hpp ****     void *operator new(size_t size) { return MemoryAllocator::alloc(size); }
 446              		.loc 3 13 39
 447              		.loc 3 13 68 is_stmt 0
 448 0194 13058001 		li	a0,24
 449              	.LVL25:
 450 0198 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 450      E7800000 
 451              	.LVL26:
 452              	.LEHE0:
 453 01a0 93040500 		mv	s1,a0
 454              	.LVL27:
 455              	.LBE118:
 456              	.LBE117:
  68:src/riscv.cpp ****         return 0;
 457              		.loc 1 68 29
 458 01a4 13860900 		mv	a2,s3
 459 01a8 93050900 		mv	a1,s2
 460              	.LEHB1:
 461 01ac 97000000 		call	_ZN4_semC1EPPS_j@plt
 461      E7800000 
 462              	.LVL28:
 463              	.LEHE1:
 464 01b4 6F00C006 		j	.L42
 465              	.LVL29:
GAS LISTING /tmp/ccxGaL4a.s 			page 15


 466              	.L34:
 467              	.LBE116:
 468              	.LBB121:
 469              	.LBB109:
  72:src/riscv.cpp ****         uint64 retval = handle->close();
 470              		.loc 1 72 9 is_stmt 1
  73:src/riscv.cpp ****         return retval;
 471              		.loc 1 73 9
  73:src/riscv.cpp ****         return retval;
 472              		.loc 1 73 38 is_stmt 0
 473 01b8 03358500 		ld	a0,8(a0)
 474              	.LVL30:
 475              	.LEHB2:
 476 01bc 97000000 		call	_ZN4_sem5closeEv@plt
 476      E7800000 
 477              	.LVL31:
  74:src/riscv.cpp ****     }
 478              		.loc 1 74 9 is_stmt 1
  74:src/riscv.cpp ****     }
 479              		.loc 1 74 16 is_stmt 0
 480 01c4 6FF01FF2 		j	.L7
 481              	.LVL32:
 482              	.L35:
 483              	.LBE109:
 484              	.LBB110:
 485              	.LBB103:
  77:src/riscv.cpp ****         uint64 retval = handle->wait();
 486              		.loc 1 77 9 is_stmt 1
  78:src/riscv.cpp ****         return retval;
 487              		.loc 1 78 9
  78:src/riscv.cpp ****         return retval;
 488              		.loc 1 78 37 is_stmt 0
 489 01c8 03358500 		ld	a0,8(a0)
 490              	.LVL33:
 491 01cc 97000000 		call	_ZN4_sem4waitEv@plt
 491      E7800000 
 492              	.LVL34:
  79:src/riscv.cpp ****     }
 493              		.loc 1 79 9 is_stmt 1
  79:src/riscv.cpp ****     }
 494              		.loc 1 79 16 is_stmt 0
 495 01d4 6FF01FF1 		j	.L7
 496              	.LVL35:
 497              	.L36:
 498              	.LBE103:
 499              	.LBB104:
 500              	.LBB98:
  82:src/riscv.cpp ****         uint64 retval = handle->signal();
 501              		.loc 1 82 9 is_stmt 1
  83:src/riscv.cpp ****         return retval;
 502              		.loc 1 83 9
  83:src/riscv.cpp ****         return retval;
 503              		.loc 1 83 39 is_stmt 0
 504 01d8 03358500 		ld	a0,8(a0)
 505              	.LVL36:
 506 01dc 97000000 		call	_ZN4_sem6signalEv@plt
 506      E7800000 
GAS LISTING /tmp/ccxGaL4a.s 			page 16


 507              	.LVL37:
  84:src/riscv.cpp ****     }
 508              		.loc 1 84 9 is_stmt 1
  84:src/riscv.cpp ****     }
 509              		.loc 1 84 16 is_stmt 0
 510 01e4 6FF01FF0 		j	.L7
 511              	.LVL38:
 512              	.L37:
 513              	.LBE98:
 514              	.LBB99:
 515              	.LBB94:
  87:src/riscv.cpp ****         uint64 retval = TCB::time_sleep(time);
 516              		.loc 1 87 9 is_stmt 1
  88:src/riscv.cpp ****         return retval;
 517              		.loc 1 88 9
  88:src/riscv.cpp ****         return retval;
 518              		.loc 1 88 40 is_stmt 0
 519 01e8 03358500 		ld	a0,8(a0)
 520              	.LVL39:
 521 01ec 97000000 		call	_ZN3TCB10time_sleepEm@plt
 521      E7800000 
 522              	.LVL40:
  89:src/riscv.cpp ****     }
 523              		.loc 1 89 9 is_stmt 1
  89:src/riscv.cpp ****     }
 524              		.loc 1 89 16 is_stmt 0
 525 01f4 6FF01FEF 		j	.L7
 526              	.LVL41:
 527              	.L38:
 528              	.LBE94:
 529              	.LBB95:
 530              	.LBB91:
  92:src/riscv.cpp ****         uint64 retval = (uint64)MemoryAllocator::alloc(size);
 531              		.loc 1 92 9 is_stmt 1
  92:src/riscv.cpp ****         uint64 retval = (uint64)MemoryAllocator::alloc(size);
 532              		.loc 1 92 25 is_stmt 0
 533 01f8 83378500 		ld	a5,8(a0)
 534              	.LVL42:
 535 01fc 2334F4FC 		sd	a5,-56(s0)
  93:src/riscv.cpp ****         return retval;
 536              		.loc 1 93 9 is_stmt 1
  93:src/riscv.cpp ****         return retval;
 537              		.loc 1 93 55 is_stmt 0
 538 0200 033584FC 		ld	a0,-56(s0)
 539              	.LVL43:
 540 0204 97000000 		call	_ZN15MemoryAllocator5allocEm@plt
 540      E7800000 
 541              	.LVL44:
  94:src/riscv.cpp ****     }
 542              		.loc 1 94 9 is_stmt 1
  94:src/riscv.cpp ****     }
 543              		.loc 1 94 16 is_stmt 0
 544 020c 6FF09FED 		j	.L7
 545              	.LVL45:
 546              	.L39:
 547              	.LBE91:
 548              	.LBB92:
GAS LISTING /tmp/ccxGaL4a.s 			page 17


 549              	.LBB90:
  97:src/riscv.cpp ****         uint64 retval = (uint64)MemoryAllocator::freee(toFree);
 550              		.loc 1 97 9 is_stmt 1
  98:src/riscv.cpp ****         return retval;
 551              		.loc 1 98 9
  98:src/riscv.cpp ****         return retval;
 552              		.loc 1 98 55 is_stmt 0
 553 0210 03358500 		ld	a0,8(a0)
 554              	.LVL46:
 555 0214 97000000 		call	_ZN15MemoryAllocator5freeeEPv@plt
 555      E7800000 
 556              	.LVL47:
 557              	.LEHE2:
  99:src/riscv.cpp ****     }
 558              		.loc 1 99 9 is_stmt 1
  99:src/riscv.cpp ****     }
 559              		.loc 1 99 16 is_stmt 0
 560 021c 6FF09FEC 		j	.L7
 561              	.LVL48:
 562              	.L42:
 563              	.LBE90:
 564              	.LBE92:
 565              	.LBE95:
 566              	.LBE99:
 567              	.LBE104:
 568              	.LBE110:
 569              	.LBE121:
 570              	.LBB122:
  69:src/riscv.cpp ****     }
 571              		.loc 1 69 16
 572 0220 13050000 		li	a0,0
 573 0224 6FF01FEC 		j	.L7
 574              	.L25:
 575 0228 13090500 		mv	s2,a0
 576              	.LVL49:
 577              	.LBB119:
 578              	.LBB120:
  14:src/../h/_sem.hpp **** 
  15:src/../h/_sem.hpp ****     void operator delete(void *toDelete) { MemoryAllocator::freee(toDelete); }
 579              		.loc 3 15 44 is_stmt 1
 580              		.loc 3 15 66 is_stmt 0
 581 022c 13850400 		mv	a0,s1
 582 0230 97000000 		call	_ZN15MemoryAllocator5freeeEPv@plt
 582      E7800000 
 583              	.LVL50:
 584 0238 13050900 		mv	a0,s2
 585              	.LEHB3:
 586 023c 97000000 		call	_Unwind_Resume@plt
 586      E7800000 
 587              	.LVL51:
 588              	.LEHE3:
 589              	.LBE120:
 590              	.LBE119:
 591              	.LBE122:
 592              	.LBE129:
 593              	.LBE138:
 594              	.LBE148:
GAS LISTING /tmp/ccxGaL4a.s 			page 18


 595              	.LBE159:
 596              	.LBE171:
 597              		.cfi_endproc
 598              	.LFE41:
 599              		.globl	__gxx_personality_v0
 600              		.section	.gcc_except_table,"a",@progbits
 601              	.LLSDA41:
 602 0000 FF       		.byte	0xff
 603 0001 FF       		.byte	0xff
 604 0002 03       		.byte	0x3
 605 0003 34       		.byte	0x34
 606 0004 00000000 		.4byte	.LEHB0-.LFB41
 607 0008 00000000 		.4byte	.LEHE0-.LEHB0
 608 000c 00000000 		.4byte	0
 609 0010 00       		.byte	0
 610 0011 00000000 		.4byte	.LEHB1-.LFB41
 611 0015 00000000 		.4byte	.LEHE1-.LEHB1
 612 0019 00000000 		.4byte	.L25-.LFB41
 613 001d 00       		.byte	0
 614 001e 00000000 		.4byte	.LEHB2-.LFB41
 615 0022 00000000 		.4byte	.LEHE2-.LEHB2
 616 0026 00000000 		.4byte	0
 617 002a 00       		.byte	0
 618 002b 00000000 		.4byte	.LEHB3-.LFB41
 619 002f 00000000 		.4byte	.LEHE3-.LEHB3
 620 0033 00000000 		.4byte	0
 621 0037 00       		.byte	0
 622              		.text
 624              		.section	.rodata.str1.8,"aMS",@progbits,1
 625              		.align	3
 626              	.LC0:
 627 0000 73636175 		.string	"scause: "
 627      73653A20 
 627      00
 628 0009 00000000 		.align	3
 628      000000
 629              	.LC1:
 630 0010 0A00     		.string	"\n"
 631 0012 00000000 		.align	3
 631      0000
 632              	.LC2:
 633 0018 73747665 		.string	"stvec: "
 633      633A2000 
 634              		.align	3
 635              	.LC3:
 636 0020 73657063 		.string	"sepc: "
 636      3A2000
 637              		.text
 638              		.align	2
 639              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 641              	_ZN5Riscv20handleSupervisorTrapEv:
 642              	.LFB42:
 104:src/riscv.cpp **** 
 105:src/riscv.cpp **** 
 106:src/riscv.cpp **** 
 107:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
 108:src/riscv.cpp **** {
GAS LISTING /tmp/ccxGaL4a.s 			page 19


 643              		.loc 1 108 1 is_stmt 1
 644              		.cfi_startproc
 645 0244 130101F4 		addi	sp,sp,-192
 646              		.cfi_def_cfa_offset 192
 647 0248 233C110A 		sd	ra,184(sp)
 648 024c 2338810A 		sd	s0,176(sp)
 649 0250 2334910A 		sd	s1,168(sp)
 650 0254 2330210B 		sd	s2,160(sp)
 651 0258 233C3109 		sd	s3,152(sp)
 652              		.cfi_offset 1, -8
 653              		.cfi_offset 8, -16
 654              		.cfi_offset 9, -24
 655              		.cfi_offset 18, -32
 656              		.cfi_offset 19, -40
 657 025c 1304010C 		addi	s0,sp,192
 658              		.cfi_def_cfa 8, 0
 109:src/riscv.cpp ****     uint64 args[5];
 659              		.loc 1 109 5
 110:src/riscv.cpp ****     loadArgsFromRegs(args);
 660              		.loc 1 110 5
 661              	.LVL52:
 662              	.LBB172:
 663              	.LBB173:
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 178:src/../h/riscv.hpp ****     return sstatus;
 179:src/../h/riscv.hpp **** }
 180:src/../h/riscv.hpp **** 
 181:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/riscv.hpp **** {
 183:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 184:src/../h/riscv.hpp **** }
 185:src/../h/riscv.hpp **** 
 186:src/../h/riscv.hpp **** inline void Riscv::loadArgsFromRegs(uint64 *arguments)
 187:src/../h/riscv.hpp **** {
 188:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r" (arguments[0]));
 664              		.loc 2 188 5
 665              		.loc 2 188 57 is_stmt 0
 666              	#APP
 667              	# 188 "src/../h/riscv.hpp" 1
 189              	    __asm__ volatile ("mv %0, a1" : "=r" (arguments[1]));
 668              		mv a5, a0
 669              	# 0 "" 2
 670              	#NO_APP
 671 0264 2334F4FA 		sd	a5,-88(s0)
 672              		.loc 2 189 5 is_stmt 1
 673              		.loc 2 189 57 is_stmt 0
 674              	#APP
 675              	# 189 "src/../h/riscv.hpp" 1
 190              	    __asm__ volatile ("mv %0, a2" : "=r" (arguments[2]));
 676              		mv a5, a1
 677              	# 0 "" 2
 678              	#NO_APP
 679 026c 2338F4FA 		sd	a5,-80(s0)
GAS LISTING /tmp/ccxGaL4a.s 			page 20


 680              		.loc 2 190 5 is_stmt 1
 681              		.loc 2 190 57 is_stmt 0
 682              	#APP
 683              	# 190 "src/../h/riscv.hpp" 1
 191              	    __asm__ volatile ("mv %0, a3" : "=r" (arguments[3]));
 684              		mv a5, a2
 685              	# 0 "" 2
 686              	#NO_APP
 687 0274 233CF4FA 		sd	a5,-72(s0)
 688              		.loc 2 191 5 is_stmt 1
 689              		.loc 2 191 57 is_stmt 0
 690              	#APP
 691              	# 191 "src/../h/riscv.hpp" 1
 192              	    __asm__ volatile ("mv %0, a4" : "=r" (arguments[4]));
 692              		mv a5, a3
 693              	# 0 "" 2
 694              	#NO_APP
 695 027c 2330F4FC 		sd	a5,-64(s0)
 696              		.loc 2 192 5 is_stmt 1
 697              		.loc 2 192 57 is_stmt 0
 698              	#APP
 699              	# 192 "src/../h/riscv.hpp" 1
 193              	}
 700              		mv a5, a4
 701              	# 0 "" 2
 702              	#NO_APP
 703 0284 2334F4FC 		sd	a5,-56(s0)
 704              	.LVL53:
 705              	.LBE173:
 706              	.LBE172:
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****     uint64 scause = r_scause();
 707              		.loc 1 112 5 is_stmt 1
 708              	.LBB174:
 709              	.LBB175:
  96:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 710              		.loc 2 96 5
  97:src/../h/riscv.hpp ****     return scause;
 711              		.loc 2 97 5
  97:src/../h/riscv.hpp ****     return scause;
 712              		.loc 2 97 72 is_stmt 0
 713              	#APP
 714              	# 97 "src/../h/riscv.hpp" 1
 715              		csrr a5, scause
 716              	# 0 "" 2
 717              	#NO_APP
 718 028c 2334F4F6 		sd	a5,-152(s0)
  98:src/../h/riscv.hpp **** }
 719              		.loc 2 98 5 is_stmt 1
  98:src/../h/riscv.hpp **** }
 720              		.loc 2 98 12 is_stmt 0
 721 0290 033784F6 		ld	a4,-152(s0)
 722              	.LVL54:
 723              	.LBE175:
 724              	.LBE174:
 113:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 725              		.loc 1 113 5 is_stmt 1
GAS LISTING /tmp/ccxGaL4a.s 			page 21


 726              	.LBB176:
 727              		.loc 1 113 40 is_stmt 0
 728 0294 930687FF 		addi	a3,a4,-8
 729              		.loc 1 113 5
 730 0298 93071000 		li	a5,1
 731 029c 63F0D710 		bleu	a3,a5,.L50
 732              	.LBE176:
 114:src/riscv.cpp ****     {
 115:src/riscv.cpp **** 
 116:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 117:src/riscv.cpp ****       //  printString("Usao u ecall\n");
 118:src/riscv.cpp ****        // printInteger(args[0]);
 119:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 120:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****         uint64 retval = (uint64)systemCall(args);
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****         w_retval(retval);
 125:src/riscv.cpp ****         w_sstatus(sstatus);
 126:src/riscv.cpp ****         w_sepc(sepc);
 127:src/riscv.cpp ****     }
 128:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 733              		.loc 1 128 10 is_stmt 1
 734              	.LBB216:
 735              	.LBB177:
 736 02a0 9307F0FF 		li	a5,-1
 737 02a4 9397F703 		slli	a5,a5,63
 738 02a8 93871700 		addi	a5,a5,1
 739 02ac 630CF712 		beq	a4,a5,.L51
 740              	.LBE177:
 741              	.LBE216:
 129:src/riscv.cpp ****     {
 130:src/riscv.cpp ****         TCB::timeSliceCounter++;
 131:src/riscv.cpp ****         //printString("Tajmer\n");
 132:src/riscv.cpp ****         TCB::checkForWakeUp();
 133:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 134:src/riscv.cpp ****        //     printString("Treba menjati\n");
 135:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 136:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 137:src/riscv.cpp ****             TCB::dispatch();
 138:src/riscv.cpp ****             w_sstatus(sstatus);
 139:src/riscv.cpp ****             w_sepc(sepc);
 140:src/riscv.cpp ****         }
 141:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 142:src/riscv.cpp ****     }
 143:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 742              		.loc 1 143 10
 743              	.LBB217:
 744              	.LBB203:
 745              	.LBB178:
 746 02b0 9307F0FF 		li	a5,-1
 747 02b4 9397F703 		slli	a5,a5,63
 748 02b8 93879700 		addi	a5,a5,9
 749 02bc 6302F71A 		beq	a4,a5,.L52
 750              	.LBB179:
 144:src/riscv.cpp ****     {
 145:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
GAS LISTING /tmp/ccxGaL4a.s 			page 22


 146:src/riscv.cpp ****         console_handler();
 147:src/riscv.cpp ****     }
 148:src/riscv.cpp ****     else
 149:src/riscv.cpp ****     {
 150:src/riscv.cpp ****         uint64 scause = r_scause();
 751              		.loc 1 150 9
 752              	.LBB180:
 753              	.LBB181:
  96:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 754              		.loc 2 96 5
  97:src/../h/riscv.hpp ****     return scause;
 755              		.loc 2 97 5
  97:src/../h/riscv.hpp ****     return scause;
 756              		.loc 2 97 72 is_stmt 0
 757              	#APP
 758              	# 97 "src/../h/riscv.hpp" 1
 759              		csrr a5, scause
 760              	# 0 "" 2
 761              	#NO_APP
 762 02c4 2330F4FA 		sd	a5,-96(s0)
  98:src/../h/riscv.hpp **** }
 763              		.loc 2 98 5 is_stmt 1
  98:src/../h/riscv.hpp **** }
 764              		.loc 2 98 12 is_stmt 0
 765 02c8 833904FA 		ld	s3,-96(s0)
 766              	.LVL55:
 767              	.LBE181:
 768              	.LBE180:
 151:src/riscv.cpp ****         uint64 stvec = r_stvec();
 769              		.loc 1 151 9 is_stmt 1
 770              	.LBB182:
 771              	.LBB183:
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 772              		.loc 2 120 5
 121:src/../h/riscv.hpp ****     return stvec;
 773              		.loc 2 121 5
 121:src/../h/riscv.hpp ****     return stvec;
 774              		.loc 2 121 68 is_stmt 0
 775              	#APP
 776              	# 121 "src/../h/riscv.hpp" 1
 777              		csrr a5, stvec
 778              	# 0 "" 2
 779              	#NO_APP
 780 02d0 233CF4F8 		sd	a5,-104(s0)
 122:src/../h/riscv.hpp **** }
 781              		.loc 2 122 5 is_stmt 1
 122:src/../h/riscv.hpp **** }
 782              		.loc 2 122 12 is_stmt 0
 783 02d4 033984F9 		ld	s2,-104(s0)
 784              	.LVL56:
 785              	.LBE183:
 786              	.LBE182:
 152:src/riscv.cpp ****         uint64 sepc = r_sepc();
 787              		.loc 1 152 9 is_stmt 1
 788              	.LBB184:
 789              	.LBB185:
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccxGaL4a.s 			page 23


 790              		.loc 2 108 5
 109:src/../h/riscv.hpp ****     return sepc;
 791              		.loc 2 109 5
 109:src/../h/riscv.hpp ****     return sepc;
 792              		.loc 2 109 64 is_stmt 0
 793              	#APP
 794              	# 109 "src/../h/riscv.hpp" 1
 795              		csrr a5, sepc
 796              	# 0 "" 2
 797              	#NO_APP
 798 02dc 2338F4F8 		sd	a5,-112(s0)
 110:src/../h/riscv.hpp **** }
 799              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 800              		.loc 2 110 12 is_stmt 0
 801 02e0 833404F9 		ld	s1,-112(s0)
 802              	.LVL57:
 803              	.LBE185:
 804              	.LBE184:
 153:src/riscv.cpp **** 
 154:src/riscv.cpp ****         printString("scause: ");
 805              		.loc 1 154 9 is_stmt 1
 806              		.loc 1 154 20 is_stmt 0
 807 02e4 17050000 		lla	a0,.LC0
 807      13050500 
 808 02ec 97000000 		call	_Z11printStringPKc@plt
 808      E7800000 
 809              	.LVL58:
 155:src/riscv.cpp ****         printInt(scause);
 810              		.loc 1 155 9 is_stmt 1
 811              		.loc 1 155 17 is_stmt 0
 812 02f4 13060000 		li	a2,0
 813 02f8 9305A000 		li	a1,10
 814 02fc 1B850900 		sext.w	a0,s3
 815 0300 97000000 		call	_Z8printIntiii@plt
 815      E7800000 
 816              	.LVL59:
 156:src/riscv.cpp ****         printString("\n");
 817              		.loc 1 156 9 is_stmt 1
 818              		.loc 1 156 20 is_stmt 0
 819 0308 17050000 		lla	a0,.LC1
 819      13050500 
 820 0310 97000000 		call	_Z11printStringPKc@plt
 820      E7800000 
 821              	.LVL60:
 157:src/riscv.cpp **** 
 158:src/riscv.cpp ****         printString("stvec: ");
 822              		.loc 1 158 9 is_stmt 1
 823              		.loc 1 158 20 is_stmt 0
 824 0318 17050000 		lla	a0,.LC2
 824      13050500 
 825 0320 97000000 		call	_Z11printStringPKc@plt
 825      E7800000 
 826              	.LVL61:
 159:src/riscv.cpp ****         printInt(stvec);
 827              		.loc 1 159 9 is_stmt 1
 828              		.loc 1 159 17 is_stmt 0
GAS LISTING /tmp/ccxGaL4a.s 			page 24


 829 0328 13060000 		li	a2,0
 830 032c 9305A000 		li	a1,10
 831 0330 1B050900 		sext.w	a0,s2
 832 0334 97000000 		call	_Z8printIntiii@plt
 832      E7800000 
 833              	.LVL62:
 160:src/riscv.cpp ****         printString("\n");
 834              		.loc 1 160 9 is_stmt 1
 835              		.loc 1 160 20 is_stmt 0
 836 033c 17050000 		lla	a0,.LC1
 836      13050500 
 837 0344 97000000 		call	_Z11printStringPKc@plt
 837      E7800000 
 838              	.LVL63:
 161:src/riscv.cpp **** 
 162:src/riscv.cpp ****         printString("sepc: ");
 839              		.loc 1 162 9 is_stmt 1
 840              		.loc 1 162 20 is_stmt 0
 841 034c 17050000 		lla	a0,.LC3
 841      13050500 
 842 0354 97000000 		call	_Z11printStringPKc@plt
 842      E7800000 
 843              	.LVL64:
 163:src/riscv.cpp ****         printInt(sepc);
 844              		.loc 1 163 9 is_stmt 1
 845              		.loc 1 163 17 is_stmt 0
 846 035c 13060000 		li	a2,0
 847 0360 9305A000 		li	a1,10
 848 0364 1B850400 		sext.w	a0,s1
 849 0368 97000000 		call	_Z8printIntiii@plt
 849      E7800000 
 850              	.LVL65:
 164:src/riscv.cpp ****         printString("\n");
 851              		.loc 1 164 9 is_stmt 1
 852              		.loc 1 164 20 is_stmt 0
 853 0370 17050000 		lla	a0,.LC1
 853      13050500 
 854 0378 97000000 		call	_Z11printStringPKc@plt
 854      E7800000 
 855              	.LVL66:
 856              	.L43:
 857              	.LBE179:
 858              	.LBE178:
 859              	.LBE203:
 860              	.LBE217:
 165:src/riscv.cpp ****     }
 166:src/riscv.cpp **** }...
 861              		.loc 1 166 1
 862 0380 8330810B 		ld	ra,184(sp)
 863              		.cfi_remember_state
 864              		.cfi_restore 1
 865 0384 0334010B 		ld	s0,176(sp)
 866              		.cfi_restore 8
 867              		.cfi_def_cfa 2, 192
 868 0388 8334810A 		ld	s1,168(sp)
 869              		.cfi_restore 9
 870 038c 0339010A 		ld	s2,160(sp)
GAS LISTING /tmp/ccxGaL4a.s 			page 25


 871              		.cfi_restore 18
 872 0390 83398109 		ld	s3,152(sp)
 873              		.cfi_restore 19
 874 0394 1301010C 		addi	sp,sp,192
 875              		.cfi_def_cfa_offset 0
 876 0398 67800000 		jr	ra
 877              	.LVL67:
 878              	.L50:
 879              		.cfi_restore_state
 880              	.LBB218:
 881              	.LBB204:
 119:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 882              		.loc 1 119 9 is_stmt 1
 883              	.LBB205:
 884              	.LBB206:
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 885              		.loc 2 108 5
 109:src/../h/riscv.hpp ****     return sepc;
 886              		.loc 2 109 5
 109:src/../h/riscv.hpp ****     return sepc;
 887              		.loc 2 109 64 is_stmt 0
 888              	#APP
 889              	# 109 "src/../h/riscv.hpp" 1
 890              		csrr a5, sepc
 891              	# 0 "" 2
 892              	#NO_APP
 893 03a0 233CF4F6 		sd	a5,-136(s0)
 110:src/../h/riscv.hpp **** }
 894              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 895              		.loc 2 110 12 is_stmt 0
 896 03a4 833784F7 		ld	a5,-136(s0)
 897              	.LBE206:
 898              	.LBE205:
 119:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 899              		.loc 1 119 41
 900 03a8 93874700 		addi	a5,a5,4
 119:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 901              		.loc 1 119 43
 902 03ac 2334F4F4 		sd	a5,-184(s0)
 120:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 903              		.loc 1 120 9 is_stmt 1
 904              	.LBB207:
 905              	.LBB208:
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 906              		.loc 2 176 5
 177:src/../h/riscv.hpp ****     return sstatus;
 907              		.loc 2 177 5
 177:src/../h/riscv.hpp ****     return sstatus;
 908              		.loc 2 177 76 is_stmt 0
 909              	#APP
 910              	# 177 "src/../h/riscv.hpp" 1
 911              		csrr a5, sstatus
 912              	# 0 "" 2
 913              	#NO_APP
 914 03b4 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccxGaL4a.s 			page 26


 915              		.loc 2 178 5 is_stmt 1
 178:src/../h/riscv.hpp **** }
 916              		.loc 2 178 12 is_stmt 0
 917 03b8 833704F7 		ld	a5,-144(s0)
 918              	.LBE208:
 919              	.LBE207:
 120:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 920              		.loc 1 120 45
 921 03bc 2338F4F4 		sd	a5,-176(s0)
 122:src/riscv.cpp ****         uint64 retval = (uint64)systemCall(args);
 922              		.loc 1 122 9 is_stmt 1
 122:src/riscv.cpp ****         uint64 retval = (uint64)systemCall(args);
 923              		.loc 1 122 43 is_stmt 0
 924 03c0 130584FA 		addi	a0,s0,-88
 925 03c4 97000000 		call	_ZN5Riscv10systemCallEPm
 925      E7800000 
 926              	.LVL68:
 124:src/riscv.cpp ****         w_retval(retval);
 927              		.loc 1 124 9 is_stmt 1
 928              	.LBB209:
 929              	.LBB210:
 194:src/../h/riscv.hpp **** 
 195:src/../h/riscv.hpp **** inline void Riscv::w_retval(uint64 retval) {
 196:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r" (retval));
 930              		.loc 2 196 5
 931              		.loc 2 196 52 is_stmt 0
 932              	#APP
 933              	# 196 "src/../h/riscv.hpp" 1
 197              	}
 934              		mv a0, a0
 935              	# 0 "" 2
 936              	.LVL69:
 937              	#NO_APP
 938              	.LBE210:
 939              	.LBE209:
 125:src/riscv.cpp ****         w_sstatus(sstatus);
 940              		.loc 1 125 9 is_stmt 1
 125:src/riscv.cpp ****         w_sstatus(sstatus);
 941              		.loc 1 125 18 is_stmt 0
 942 03d0 833704F5 		ld	a5,-176(s0)
 943              	.LVL70:
 944              	.LBB211:
 945              	.LBB212:
 183:src/../h/riscv.hpp **** }
 946              		.loc 2 183 5 is_stmt 1
 183:src/../h/riscv.hpp **** }
 947              		.loc 2 183 77 is_stmt 0
 948              	#APP
 949              	# 183 "src/../h/riscv.hpp" 1
 950              		csrw sstatus, a5
 951              	# 0 "" 2
 952              	.LVL71:
 953              	#NO_APP
 954              	.LBE212:
 955              	.LBE211:
 126:src/riscv.cpp ****         w_sepc(sepc);
 956              		.loc 1 126 9 is_stmt 1
GAS LISTING /tmp/ccxGaL4a.s 			page 27


 126:src/riscv.cpp ****         w_sepc(sepc);
 957              		.loc 1 126 15 is_stmt 0
 958 03d8 833784F4 		ld	a5,-184(s0)
 959              	.LVL72:
 960              	.LBB213:
 961              	.LBB214:
 115:src/../h/riscv.hpp **** }
 962              		.loc 2 115 5 is_stmt 1
 115:src/../h/riscv.hpp **** }
 963              		.loc 2 115 65 is_stmt 0
 964              	#APP
 965              	# 115 "src/../h/riscv.hpp" 1
 116:src/../h/riscv.hpp **** 
 966              		csrw sepc, a5
 967              	# 0 "" 2
 968              		.loc 2 116 1
 969              	#NO_APP
 970 03e0 6FF01FFA 		j	.L43
 971              	.LVL73:
 972              	.L51:
 973              	.LBE214:
 974              	.LBE213:
 975              	.LBE204:
 976              	.LBB215:
 977              	.LBB186:
 130:src/riscv.cpp ****         TCB::timeSliceCounter++;
 978              		.loc 1 130 9 is_stmt 1
 130:src/riscv.cpp ****         TCB::timeSliceCounter++;
 979              		.loc 1 130 30 is_stmt 0
 980 03e4 97040000 		la	s1,_ZN3TCB16timeSliceCounterE
 980      83B40400 
 981 03ec 83B70400 		ld	a5,0(s1)
 982 03f0 93871700 		addi	a5,a5,1
 983 03f4 23B0F400 		sd	a5,0(s1)
 132:src/riscv.cpp ****         TCB::checkForWakeUp();
 984              		.loc 1 132 9 is_stmt 1
 132:src/riscv.cpp ****         TCB::checkForWakeUp();
 985              		.loc 1 132 28 is_stmt 0
 986 03f8 97000000 		call	_ZN3TCB14checkForWakeUpEv@plt
 986      E7800000 
 987              	.LVL74:
 133:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 988              		.loc 1 133 9 is_stmt 1
 989              	.LBB187:
 133:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 990              		.loc 1 133 64 is_stmt 0
 991 0400 97070000 		la	a5,_ZN3TCB7runningE
 991      83B70700 
 992 0408 83B70700 		ld	a5,0(a5)
 993              	.LVL75:
 994              	.LBB188:
 995              	.LBB189:
 996              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   2:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccxGaL4a.s 			page 28


   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** #include "MemoryAllocator.hpp"
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** enum Status
   9:src/../h/tcb.hpp **** {
  10:src/../h/tcb.hpp ****     FINISHED,
  11:src/../h/tcb.hpp ****     RUNNING,
  12:src/../h/tcb.hpp ****     READY,
  13:src/../h/tcb.hpp ****     CREATED,
  14:src/../h/tcb.hpp ****     WAITING,
  15:src/../h/tcb.hpp ****     SLEEPING,
  16:src/../h/tcb.hpp ****     IDLE
  17:src/../h/tcb.hpp **** };
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp **** // Thread Control Block
  20:src/../h/tcb.hpp **** class TCB
  21:src/../h/tcb.hpp **** {
  22:src/../h/tcb.hpp **** public:
  23:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 997              		.loc 4 25 35 is_stmt 1
 998              		.loc 4 25 42 is_stmt 0
 999 040c 83B78702 		ld	a5,40(a5)
 1000              	.LVL76:
 1001              	.LBE189:
 1002              	.LBE188:
 133:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 1003              		.loc 1 133 35
 1004 0410 03B70400 		ld	a4,0(s1)
 133:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 1005              		.loc 1 133 9
 1006 0414 6378F700 		bgeu	a4,a5,.L53
 1007              	.L47:
 1008              	.LBE187:
 141:src/riscv.cpp ****             mc_sip(SIP_SSIP);
 1009              		.loc 1 141 13 is_stmt 1
 1010              	.LVL77:
 1011              	.LBB199:
 1012              	.LBB200:
 149:src/../h/riscv.hpp **** }
 1013              		.loc 2 149 5
 149:src/../h/riscv.hpp **** }
 1014              		.loc 2 149 64 is_stmt 0
 1015 0418 93072000 		li	a5,2
 1016              	#APP
 1017              	# 149 "src/../h/riscv.hpp" 1
 150:src/../h/riscv.hpp **** 
 1018              		csrc sip, a5
 1019              	# 0 "" 2
 1020              		.loc 2 150 1
 1021              	#NO_APP
 1022 0420 6FF01FF6 		j	.L43
 1023              	.LVL78:
 1024              	.L53:
 1025              	.LBE200:
 1026              	.LBE199:
GAS LISTING /tmp/ccxGaL4a.s 			page 29


 1027              	.LBB201:
 1028              	.LBB190:
 135:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 1029              		.loc 1 135 13 is_stmt 1
 1030              	.LBB191:
 1031              	.LBB192:
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1032              		.loc 2 108 5
 109:src/../h/riscv.hpp ****     return sepc;
 1033              		.loc 2 109 5
 109:src/../h/riscv.hpp ****     return sepc;
 1034              		.loc 2 109 64 is_stmt 0
 1035              	#APP
 1036              	# 109 "src/../h/riscv.hpp" 1
 1037              		csrr a5, sepc
 1038              	# 0 "" 2
 1039              	#NO_APP
 1040 0428 2334F4F8 		sd	a5,-120(s0)
 110:src/../h/riscv.hpp **** }
 1041              		.loc 2 110 5 is_stmt 1
 110:src/../h/riscv.hpp **** }
 1042              		.loc 2 110 12 is_stmt 0
 1043 042c 833784F8 		ld	a5,-120(s0)
 1044              	.LBE192:
 1045              	.LBE191:
 135:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 1046              		.loc 1 135 43
 1047 0430 233CF4F4 		sd	a5,-168(s0)
 136:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 1048              		.loc 1 136 13 is_stmt 1
 1049              	.LBB193:
 1050              	.LBB194:
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1051              		.loc 2 176 5
 177:src/../h/riscv.hpp ****     return sstatus;
 1052              		.loc 2 177 5
 177:src/../h/riscv.hpp ****     return sstatus;
 1053              		.loc 2 177 76 is_stmt 0
 1054              	#APP
 1055              	# 177 "src/../h/riscv.hpp" 1
 1056              		csrr a5, sstatus
 1057              	# 0 "" 2
 1058              	#NO_APP
 1059 0438 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/riscv.hpp **** }
 1060              		.loc 2 178 5 is_stmt 1
 178:src/../h/riscv.hpp **** }
 1061              		.loc 2 178 12 is_stmt 0
 1062 043c 833704F8 		ld	a5,-128(s0)
 1063              	.LBE194:
 1064              	.LBE193:
 136:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 1065              		.loc 1 136 49
 1066 0440 2330F4F6 		sd	a5,-160(s0)
 137:src/riscv.cpp ****             TCB::dispatch();
 1067              		.loc 1 137 13 is_stmt 1
 137:src/riscv.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccxGaL4a.s 			page 30


 1068              		.loc 1 137 26 is_stmt 0
 1069 0444 97000000 		call	_ZN3TCB8dispatchEv@plt
 1069      E7800000 
 1070              	.LVL79:
 138:src/riscv.cpp ****             w_sstatus(sstatus);
 1071              		.loc 1 138 13 is_stmt 1
 138:src/riscv.cpp ****             w_sstatus(sstatus);
 1072              		.loc 1 138 22 is_stmt 0
 1073 044c 833704F6 		ld	a5,-160(s0)
 1074              	.LVL80:
 1075              	.LBB195:
 1076              	.LBB196:
 183:src/../h/riscv.hpp **** }
 1077              		.loc 2 183 5 is_stmt 1
 183:src/../h/riscv.hpp **** }
 1078              		.loc 2 183 77 is_stmt 0
 1079              	#APP
 1080              	# 183 "src/../h/riscv.hpp" 1
 1081              		csrw sstatus, a5
 1082              	# 0 "" 2
 1083              	.LVL81:
 1084              	#NO_APP
 1085              	.LBE196:
 1086              	.LBE195:
 139:src/riscv.cpp ****             w_sepc(sepc);
 1087              		.loc 1 139 13 is_stmt 1
 139:src/riscv.cpp ****             w_sepc(sepc);
 1088              		.loc 1 139 19 is_stmt 0
 1089 0454 833784F5 		ld	a5,-168(s0)
 1090              	.LVL82:
 1091              	.LBB197:
 1092              	.LBB198:
 115:src/../h/riscv.hpp **** }
 1093              		.loc 2 115 5 is_stmt 1
 115:src/../h/riscv.hpp **** }
 1094              		.loc 2 115 65 is_stmt 0
 1095              	#APP
 1096              	# 115 "src/../h/riscv.hpp" 1
 116:src/../h/riscv.hpp **** 
 1097              		csrw sepc, a5
 1098              	# 0 "" 2
 1099              		.loc 2 116 1
 1100              	#NO_APP
 1101 045c 6FF0DFFB 		j	.L47
 1102              	.LVL83:
 1103              	.L52:
 1104              	.LBE198:
 1105              	.LBE197:
 1106              	.LBE190:
 1107              	.LBE201:
 1108              	.LBE186:
 1109              	.LBB202:
 146:src/riscv.cpp ****         console_handler();
 1110              		.loc 1 146 9 is_stmt 1
 146:src/riscv.cpp ****         console_handler();
 1111              		.loc 1 146 24 is_stmt 0
 1112 0460 97000000 		call	console_handler@plt
GAS LISTING /tmp/ccxGaL4a.s 			page 31


 1112      E7800000 
 1113              	.LVL84:
 1114 0468 6FF09FF1 		j	.L43
 1115              	.LBE202:
 1116              	.LBE215:
 1117              	.LBE218:
 1118              		.cfi_endproc
 1119              	.LFE42:
 1121              	.Letext0:
 1122              		.file 5 "src/../h/../lib/hw.h"
 1123              		.file 6 "src/../h/../h/../h/MemoryDesc.hpp"
 1124              		.file 7 "src/../h/../h/MemoryAllocator.hpp"
 1125              		.file 8 "src/../h/list.hpp"
 1126              		.file 9 "src/../test/../h/syscall_c.h"
 1127              		.file 10 "src/../test/printing.hpp"
 1128              		.file 11 "src/../lib/console.h"
 5746              		.align	3
 5749              	DW.ref.__gxx_personality_v0:
 5750 0000 00000000 		.dword	__gxx_personality_v0
 5750      00000000 
 5751              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5752              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccxGaL4a.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccxGaL4a.s:9      .text:0000000000000000 _ZN5Riscv9privilegeEv
     /tmp/ccxGaL4a.s:13     .text:0000000000000000 .L0 
     /tmp/ccxGaL4a.s:14     .text:0000000000000000 .L0 
     /tmp/ccxGaL4a.s:15     .text:0000000000000004 .L0 
     /tmp/ccxGaL4a.s:17     .text:0000000000000008 .L0 
     /tmp/ccxGaL4a.s:19     .text:000000000000000c .L0 
     /tmp/ccxGaL4a.s:21     .text:000000000000000c .L0 
     /tmp/ccxGaL4a.s:22     .text:000000000000000c .L0 
     /tmp/ccxGaL4a.s:26     .text:000000000000001c .L0 
     /tmp/ccxGaL4a.s:32     .text:0000000000000020 .L0 
     /tmp/ccxGaL4a.s:33     .text:0000000000000020 .L0 
     /tmp/ccxGaL4a.s:34     .text:0000000000000020 .L0 
     /tmp/ccxGaL4a.s:45     .text:0000000000000028 .L0 
     /tmp/ccxGaL4a.s:46     .text:000000000000002c .L0 
     /tmp/ccxGaL4a.s:47     .text:000000000000002c .L0 
     /tmp/ccxGaL4a.s:48     .text:000000000000002c .L0 
     /tmp/ccxGaL4a.s:50     .text:0000000000000030 .L0 
     /tmp/ccxGaL4a.s:53     .text:0000000000000034 .L0 
     /tmp/ccxGaL4a.s:58     .text:0000000000000034 .L0 
     /tmp/ccxGaL4a.s:59     .text:0000000000000034 .L0 
     /tmp/ccxGaL4a.s:60     .text:0000000000000034 .L0 
     /tmp/ccxGaL4a.s:70     .text:000000000000003c .L0 
     /tmp/ccxGaL4a.s:71     .text:0000000000000040 .L0 
     /tmp/ccxGaL4a.s:77     .text:0000000000000040 _ZN5Riscv10popSppSpieEv
     /tmp/ccxGaL4a.s:80     .text:0000000000000040 .L0 
     /tmp/ccxGaL4a.s:81     .text:0000000000000040 .L0 
     /tmp/ccxGaL4a.s:82     .text:0000000000000044 .L0 
     /tmp/ccxGaL4a.s:84     .text:0000000000000048 .L0 
     /tmp/ccxGaL4a.s:86     .text:000000000000004c .L0 
     /tmp/ccxGaL4a.s:88     .text:000000000000004c .L0 
       src/riscv.cpp:19     .text:000000000000004c .L0 
     /tmp/ccxGaL4a.s:94     .text:0000000000000050 .L0 
       src/riscv.cpp:20     .text:0000000000000050 .L0 
     /tmp/ccxGaL4a.s:100    .text:0000000000000054 .L0 
     /tmp/ccxGaL4a.s:101    .text:0000000000000058 .L0 
     /tmp/ccxGaL4a.s:102    .text:0000000000000058 .L0 
     /tmp/ccxGaL4a.s:104    .text:000000000000005c .L0 
     /tmp/ccxGaL4a.s:106    .text:0000000000000060 .L0 
     /tmp/ccxGaL4a.s:112    .text:0000000000000060 _ZN5Riscv10systemCallEPm
     /tmp/ccxGaL4a.s:115    .text:0000000000000060 .L0 
     /tmp/ccxGaL4a.s:5749   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccxGaL4a.s:119    .text:0000000000000060 .L0 
     /tmp/ccxGaL4a.s:120    .text:0000000000000064 .L0 
     /tmp/ccxGaL4a.s:126    .text:0000000000000078 .L0 
     /tmp/ccxGaL4a.s:127    .text:0000000000000078 .L0 
     /tmp/ccxGaL4a.s:128    .text:0000000000000078 .L0 
     /tmp/ccxGaL4a.s:129    .text:0000000000000078 .L0 
     /tmp/ccxGaL4a.s:130    .text:0000000000000078 .L0 
     /tmp/ccxGaL4a.s:132    .text:000000000000007c .L0 
     /tmp/ccxGaL4a.s:134    .text:000000000000007c .L0 
     /tmp/ccxGaL4a.s:135    .text:000000000000007c .L0 
     /tmp/ccxGaL4a.s:139    .text:0000000000000080 .L0 
     /tmp/ccxGaL4a.s:144    .text:0000000000000088 .L0 
     /tmp/ccxGaL4a.s:150    .text:0000000000000090 .L0 
     /tmp/ccxGaL4a.s:158    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccxGaL4a.s 			page 33


     /tmp/ccxGaL4a.s:168    .text:00000000000000a0 .L0 
     /tmp/ccxGaL4a.s:180    .text:00000000000000a8 .L0 
     /tmp/ccxGaL4a.s:194    .text:00000000000000b0 .L0 
     /tmp/ccxGaL4a.s:210    .text:00000000000000b8 .L0 
     /tmp/ccxGaL4a.s:228    .text:00000000000000c0 .L0 
     /tmp/ccxGaL4a.s:248    .text:00000000000000c8 .L0 
     /tmp/ccxGaL4a.s:270    .text:00000000000000d0 .L0 
     /tmp/ccxGaL4a.s:294    .text:00000000000000d8 .L0 
     /tmp/ccxGaL4a.s:308    .text:00000000000000e0 .L0 
     /tmp/ccxGaL4a.s:312    .text:00000000000000e4 .L0 
     /tmp/ccxGaL4a.s:313    .text:00000000000000e8 .L0 
     /tmp/ccxGaL4a.s:314    .text:00000000000000e8 .L0 
     /tmp/ccxGaL4a.s:316    .text:00000000000000ec .L0 
     /tmp/ccxGaL4a.s:317    .text:00000000000000ec .L0 
     /tmp/ccxGaL4a.s:319    .text:00000000000000f0 .L0 
     /tmp/ccxGaL4a.s:321    .text:00000000000000f4 .L0 
     /tmp/ccxGaL4a.s:323    .text:00000000000000f8 .L0 
     /tmp/ccxGaL4a.s:325    .text:00000000000000fc .L0 
     /tmp/ccxGaL4a.s:329    .text:0000000000000100 .L0 
     /tmp/ccxGaL4a.s:333    .text:0000000000000100 .L0 
     /tmp/ccxGaL4a.s:334    .text:0000000000000100 .L0 
     /tmp/ccxGaL4a.s:337    .text:0000000000000104 .L0 
     /tmp/ccxGaL4a.s:338    .text:0000000000000104 .L0 
     /tmp/ccxGaL4a.s:339    .text:0000000000000104 .L0 
     /tmp/ccxGaL4a.s:340    .text:0000000000000104 .L0 
     /tmp/ccxGaL4a.s:341    .text:0000000000000104 .L0 
     /tmp/ccxGaL4a.s:349    .text:0000000000000118 .L0 
     /tmp/ccxGaL4a.s:351    .text:000000000000011c .L0 
     /tmp/ccxGaL4a.s:353    .text:0000000000000120 .L0 
     /tmp/ccxGaL4a.s:357    .text:0000000000000128 .L0 
     /tmp/ccxGaL4a.s:366    .text:0000000000000130 .L0 
     /tmp/ccxGaL4a.s:367    .text:0000000000000130 .L0 
     /tmp/ccxGaL4a.s:370    .text:0000000000000134 .L0 
     /tmp/ccxGaL4a.s:371    .text:0000000000000134 .L0 
     /tmp/ccxGaL4a.s:372    .text:0000000000000134 .L0 
     /tmp/ccxGaL4a.s:373    .text:0000000000000134 .L0 
     /tmp/ccxGaL4a.s:374    .text:0000000000000134 .L0 
     /tmp/ccxGaL4a.s:381    .text:0000000000000148 .L0 
     /tmp/ccxGaL4a.s:383    .text:000000000000014c .L0 
     /tmp/ccxGaL4a.s:385    .text:0000000000000150 .L0 
     /tmp/ccxGaL4a.s:389    .text:0000000000000158 .L0 
     /tmp/ccxGaL4a.s:397    .text:0000000000000160 .L0 
     /tmp/ccxGaL4a.s:398    .text:0000000000000160 .L0 
     /tmp/ccxGaL4a.s:399    .text:0000000000000160 .L0 
     /tmp/ccxGaL4a.s:404    .text:000000000000016c .L0 
     /tmp/ccxGaL4a.s:405    .text:000000000000016c .L0 
     /tmp/ccxGaL4a.s:412    .text:0000000000000170 .L0 
     /tmp/ccxGaL4a.s:413    .text:0000000000000170 .L0 
     /tmp/ccxGaL4a.s:416    .text:0000000000000178 .L0 
     /tmp/ccxGaL4a.s:417    .text:0000000000000178 .L0 
     /tmp/ccxGaL4a.s:423    .text:000000000000017c .L0 
     /tmp/ccxGaL4a.s:424    .text:000000000000017c .L0 
     /tmp/ccxGaL4a.s:427    .text:0000000000000184 .L0 
     /tmp/ccxGaL4a.s:428    .text:0000000000000184 .L0 
     /tmp/ccxGaL4a.s:435    .text:000000000000018c .L0 
     /tmp/ccxGaL4a.s:436    .text:000000000000018c .L0 
     /tmp/ccxGaL4a.s:439    .text:0000000000000190 .L0 
GAS LISTING /tmp/ccxGaL4a.s 			page 34


     /tmp/ccxGaL4a.s:440    .text:0000000000000190 .L0 
     /tmp/ccxGaL4a.s:446    .text:0000000000000194 .L0 
     /tmp/ccxGaL4a.s:447    .text:0000000000000194 .L0 
     /tmp/ccxGaL4a.s:448    .text:0000000000000194 .L0 
     /tmp/ccxGaL4a.s:458    .text:00000000000001a4 .L0 
     /tmp/ccxGaL4a.s:471    .text:00000000000001b8 .L0 
     /tmp/ccxGaL4a.s:472    .text:00000000000001b8 .L0 
     /tmp/ccxGaL4a.s:473    .text:00000000000001b8 .L0 
     /tmp/ccxGaL4a.s:479    .text:00000000000001c4 .L0 
     /tmp/ccxGaL4a.s:480    .text:00000000000001c4 .L0 
     /tmp/ccxGaL4a.s:487    .text:00000000000001c8 .L0 
     /tmp/ccxGaL4a.s:488    .text:00000000000001c8 .L0 
     /tmp/ccxGaL4a.s:489    .text:00000000000001c8 .L0 
     /tmp/ccxGaL4a.s:494    .text:00000000000001d4 .L0 
     /tmp/ccxGaL4a.s:495    .text:00000000000001d4 .L0 
     /tmp/ccxGaL4a.s:502    .text:00000000000001d8 .L0 
     /tmp/ccxGaL4a.s:503    .text:00000000000001d8 .L0 
     /tmp/ccxGaL4a.s:504    .text:00000000000001d8 .L0 
     /tmp/ccxGaL4a.s:509    .text:00000000000001e4 .L0 
     /tmp/ccxGaL4a.s:510    .text:00000000000001e4 .L0 
     /tmp/ccxGaL4a.s:517    .text:00000000000001e8 .L0 
     /tmp/ccxGaL4a.s:518    .text:00000000000001e8 .L0 
     /tmp/ccxGaL4a.s:519    .text:00000000000001e8 .L0 
     /tmp/ccxGaL4a.s:524    .text:00000000000001f4 .L0 
     /tmp/ccxGaL4a.s:525    .text:00000000000001f4 .L0 
     /tmp/ccxGaL4a.s:532    .text:00000000000001f8 .L0 
     /tmp/ccxGaL4a.s:533    .text:00000000000001f8 .L0 
     /tmp/ccxGaL4a.s:537    .text:0000000000000200 .L0 
     /tmp/ccxGaL4a.s:538    .text:0000000000000200 .L0 
     /tmp/ccxGaL4a.s:543    .text:000000000000020c .L0 
     /tmp/ccxGaL4a.s:544    .text:000000000000020c .L0 
     /tmp/ccxGaL4a.s:551    .text:0000000000000210 .L0 
     /tmp/ccxGaL4a.s:552    .text:0000000000000210 .L0 
     /tmp/ccxGaL4a.s:553    .text:0000000000000210 .L0 
     /tmp/ccxGaL4a.s:559    .text:000000000000021c .L0 
     /tmp/ccxGaL4a.s:560    .text:000000000000021c .L0 
     /tmp/ccxGaL4a.s:572    .text:0000000000000220 .L0 
     /tmp/ccxGaL4a.s:580    .text:000000000000022c .L0 
     /tmp/ccxGaL4a.s:581    .text:000000000000022c .L0 
     /tmp/ccxGaL4a.s:597    .text:0000000000000244 .L0 
     /tmp/ccxGaL4a.s:641    .text:0000000000000244 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxGaL4a.s:644    .text:0000000000000244 .L0 
     /tmp/ccxGaL4a.s:645    .text:0000000000000244 .L0 
     /tmp/ccxGaL4a.s:646    .text:0000000000000248 .L0 
     /tmp/ccxGaL4a.s:652    .text:000000000000025c .L0 
     /tmp/ccxGaL4a.s:653    .text:000000000000025c .L0 
     /tmp/ccxGaL4a.s:654    .text:000000000000025c .L0 
     /tmp/ccxGaL4a.s:655    .text:000000000000025c .L0 
     /tmp/ccxGaL4a.s:656    .text:000000000000025c .L0 
     /tmp/ccxGaL4a.s:658    .text:0000000000000260 .L0 
     /tmp/ccxGaL4a.s:660    .text:0000000000000260 .L0 
     /tmp/ccxGaL4a.s:664    .text:0000000000000260 .L0 
     /tmp/ccxGaL4a.s:665    .text:0000000000000260 .L0 
  src/../h/riscv.hpp:188    .text:0000000000000260 .L0 
     /tmp/ccxGaL4a.s:673    .text:0000000000000268 .L0 
  src/../h/riscv.hpp:189    .text:0000000000000268 .L0 
     /tmp/ccxGaL4a.s:681    .text:0000000000000270 .L0 
GAS LISTING /tmp/ccxGaL4a.s 			page 35


  src/../h/riscv.hpp:190    .text:0000000000000270 .L0 
     /tmp/ccxGaL4a.s:689    .text:0000000000000278 .L0 
  src/../h/riscv.hpp:191    .text:0000000000000278 .L0 
     /tmp/ccxGaL4a.s:697    .text:0000000000000280 .L0 
  src/../h/riscv.hpp:192    .text:0000000000000280 .L0 
     /tmp/ccxGaL4a.s:710    .text:0000000000000288 .L0 
     /tmp/ccxGaL4a.s:711    .text:0000000000000288 .L0 
     /tmp/ccxGaL4a.s:712    .text:0000000000000288 .L0 
  src/../h/riscv.hpp:97     .text:0000000000000288 .L0 
     /tmp/ccxGaL4a.s:720    .text:0000000000000290 .L0 
     /tmp/ccxGaL4a.s:721    .text:0000000000000290 .L0 
     /tmp/ccxGaL4a.s:727    .text:0000000000000294 .L0 
     /tmp/ccxGaL4a.s:728    .text:0000000000000294 .L0 
     /tmp/ccxGaL4a.s:730    .text:0000000000000298 .L0 
     /tmp/ccxGaL4a.s:736    .text:00000000000002a0 .L0 
     /tmp/ccxGaL4a.s:746    .text:00000000000002b0 .L0 
     /tmp/ccxGaL4a.s:754    .text:00000000000002c0 .L0 
     /tmp/ccxGaL4a.s:755    .text:00000000000002c0 .L0 
     /tmp/ccxGaL4a.s:756    .text:00000000000002c0 .L0 
  src/../h/riscv.hpp:97     .text:00000000000002c0 .L0 
     /tmp/ccxGaL4a.s:764    .text:00000000000002c8 .L0 
     /tmp/ccxGaL4a.s:765    .text:00000000000002c8 .L0 
     /tmp/ccxGaL4a.s:772    .text:00000000000002cc .L0 
     /tmp/ccxGaL4a.s:773    .text:00000000000002cc .L0 
     /tmp/ccxGaL4a.s:774    .text:00000000000002cc .L0 
  src/../h/riscv.hpp:121    .text:00000000000002cc .L0 
     /tmp/ccxGaL4a.s:782    .text:00000000000002d4 .L0 
     /tmp/ccxGaL4a.s:783    .text:00000000000002d4 .L0 
     /tmp/ccxGaL4a.s:790    .text:00000000000002d8 .L0 
     /tmp/ccxGaL4a.s:791    .text:00000000000002d8 .L0 
     /tmp/ccxGaL4a.s:792    .text:00000000000002d8 .L0 
  src/../h/riscv.hpp:109    .text:00000000000002d8 .L0 
     /tmp/ccxGaL4a.s:800    .text:00000000000002e0 .L0 
     /tmp/ccxGaL4a.s:801    .text:00000000000002e0 .L0 
     /tmp/ccxGaL4a.s:806    .text:00000000000002e4 .L0 
     /tmp/ccxGaL4a.s:807    .text:00000000000002e4 .L0 
     /tmp/ccxGaL4a.s:811    .text:00000000000002f4 .L0 
     /tmp/ccxGaL4a.s:812    .text:00000000000002f4 .L0 
     /tmp/ccxGaL4a.s:818    .text:0000000000000308 .L0 
     /tmp/ccxGaL4a.s:819    .text:0000000000000308 .L0 
     /tmp/ccxGaL4a.s:823    .text:0000000000000318 .L0 
     /tmp/ccxGaL4a.s:824    .text:0000000000000318 .L0 
     /tmp/ccxGaL4a.s:828    .text:0000000000000328 .L0 
     /tmp/ccxGaL4a.s:829    .text:0000000000000328 .L0 
     /tmp/ccxGaL4a.s:835    .text:000000000000033c .L0 
     /tmp/ccxGaL4a.s:836    .text:000000000000033c .L0 
     /tmp/ccxGaL4a.s:840    .text:000000000000034c .L0 
     /tmp/ccxGaL4a.s:841    .text:000000000000034c .L0 
     /tmp/ccxGaL4a.s:845    .text:000000000000035c .L0 
     /tmp/ccxGaL4a.s:846    .text:000000000000035c .L0 
     /tmp/ccxGaL4a.s:852    .text:0000000000000370 .L0 
     /tmp/ccxGaL4a.s:853    .text:0000000000000370 .L0 
     /tmp/ccxGaL4a.s:862    .text:0000000000000380 .L0 
     /tmp/ccxGaL4a.s:863    .text:0000000000000384 .L0 
     /tmp/ccxGaL4a.s:864    .text:0000000000000384 .L0 
     /tmp/ccxGaL4a.s:866    .text:0000000000000388 .L0 
     /tmp/ccxGaL4a.s:867    .text:0000000000000388 .L0 
GAS LISTING /tmp/ccxGaL4a.s 			page 36


     /tmp/ccxGaL4a.s:869    .text:000000000000038c .L0 
     /tmp/ccxGaL4a.s:871    .text:0000000000000390 .L0 
     /tmp/ccxGaL4a.s:873    .text:0000000000000394 .L0 
     /tmp/ccxGaL4a.s:875    .text:0000000000000398 .L0 
     /tmp/ccxGaL4a.s:879    .text:000000000000039c .L0 
     /tmp/ccxGaL4a.s:885    .text:000000000000039c .L0 
     /tmp/ccxGaL4a.s:886    .text:000000000000039c .L0 
     /tmp/ccxGaL4a.s:887    .text:000000000000039c .L0 
  src/../h/riscv.hpp:109    .text:000000000000039c .L0 
     /tmp/ccxGaL4a.s:895    .text:00000000000003a4 .L0 
     /tmp/ccxGaL4a.s:896    .text:00000000000003a4 .L0 
     /tmp/ccxGaL4a.s:900    .text:00000000000003a8 .L0 
     /tmp/ccxGaL4a.s:902    .text:00000000000003ac .L0 
     /tmp/ccxGaL4a.s:906    .text:00000000000003b0 .L0 
     /tmp/ccxGaL4a.s:907    .text:00000000000003b0 .L0 
     /tmp/ccxGaL4a.s:908    .text:00000000000003b0 .L0 
  src/../h/riscv.hpp:177    .text:00000000000003b0 .L0 
     /tmp/ccxGaL4a.s:916    .text:00000000000003b8 .L0 
     /tmp/ccxGaL4a.s:917    .text:00000000000003b8 .L0 
     /tmp/ccxGaL4a.s:921    .text:00000000000003bc .L0 
     /tmp/ccxGaL4a.s:923    .text:00000000000003c0 .L0 
     /tmp/ccxGaL4a.s:924    .text:00000000000003c0 .L0 
     /tmp/ccxGaL4a.s:930    .text:00000000000003cc .L0 
     /tmp/ccxGaL4a.s:931    .text:00000000000003cc .L0 
  src/../h/riscv.hpp:196    .text:00000000000003cc .L0 
     /tmp/ccxGaL4a.s:941    .text:00000000000003d0 .L0 
     /tmp/ccxGaL4a.s:942    .text:00000000000003d0 .L0 
     /tmp/ccxGaL4a.s:947    .text:00000000000003d4 .L0 
  src/../h/riscv.hpp:183    .text:00000000000003d4 .L0 
     /tmp/ccxGaL4a.s:957    .text:00000000000003d8 .L0 
     /tmp/ccxGaL4a.s:958    .text:00000000000003d8 .L0 
     /tmp/ccxGaL4a.s:963    .text:00000000000003dc .L0 
  src/../h/riscv.hpp:115    .text:00000000000003dc .L0 
     /tmp/ccxGaL4a.s:970    .text:00000000000003e0 .L0 
     /tmp/ccxGaL4a.s:979    .text:00000000000003e4 .L0 
     /tmp/ccxGaL4a.s:980    .text:00000000000003e4 .L0 
     /tmp/ccxGaL4a.s:985    .text:00000000000003f8 .L0 
     /tmp/ccxGaL4a.s:986    .text:00000000000003f8 .L0 
     /tmp/ccxGaL4a.s:990    .text:0000000000000400 .L0 
     /tmp/ccxGaL4a.s:991    .text:0000000000000400 .L0 
     /tmp/ccxGaL4a.s:998    .text:000000000000040c .L0 
     /tmp/ccxGaL4a.s:999    .text:000000000000040c .L0 
     /tmp/ccxGaL4a.s:1004   .text:0000000000000410 .L0 
     /tmp/ccxGaL4a.s:1006   .text:0000000000000414 .L0 
     /tmp/ccxGaL4a.s:1013   .text:0000000000000418 .L0 
     /tmp/ccxGaL4a.s:1014   .text:0000000000000418 .L0 
     /tmp/ccxGaL4a.s:1015   .text:0000000000000418 .L0 
     /tmp/ccxGaL4a.s:1022   .text:0000000000000420 .L0 
     /tmp/ccxGaL4a.s:1032   .text:0000000000000424 .L0 
     /tmp/ccxGaL4a.s:1033   .text:0000000000000424 .L0 
     /tmp/ccxGaL4a.s:1034   .text:0000000000000424 .L0 
  src/../h/riscv.hpp:109    .text:0000000000000424 .L0 
     /tmp/ccxGaL4a.s:1042   .text:000000000000042c .L0 
     /tmp/ccxGaL4a.s:1043   .text:000000000000042c .L0 
     /tmp/ccxGaL4a.s:1047   .text:0000000000000430 .L0 
     /tmp/ccxGaL4a.s:1051   .text:0000000000000434 .L0 
     /tmp/ccxGaL4a.s:1052   .text:0000000000000434 .L0 
GAS LISTING /tmp/ccxGaL4a.s 			page 37


     /tmp/ccxGaL4a.s:1053   .text:0000000000000434 .L0 
  src/../h/riscv.hpp:177    .text:0000000000000434 .L0 
     /tmp/ccxGaL4a.s:1061   .text:000000000000043c .L0 
     /tmp/ccxGaL4a.s:1062   .text:000000000000043c .L0 
     /tmp/ccxGaL4a.s:1066   .text:0000000000000440 .L0 
     /tmp/ccxGaL4a.s:1068   .text:0000000000000444 .L0 
     /tmp/ccxGaL4a.s:1069   .text:0000000000000444 .L0 
     /tmp/ccxGaL4a.s:1072   .text:000000000000044c .L0 
     /tmp/ccxGaL4a.s:1073   .text:000000000000044c .L0 
     /tmp/ccxGaL4a.s:1078   .text:0000000000000450 .L0 
  src/../h/riscv.hpp:183    .text:0000000000000450 .L0 
     /tmp/ccxGaL4a.s:1088   .text:0000000000000454 .L0 
     /tmp/ccxGaL4a.s:1089   .text:0000000000000454 .L0 
     /tmp/ccxGaL4a.s:1094   .text:0000000000000458 .L0 
  src/../h/riscv.hpp:115    .text:0000000000000458 .L0 
     /tmp/ccxGaL4a.s:1101   .text:000000000000045c .L0 
     /tmp/ccxGaL4a.s:1111   .text:0000000000000460 .L0 
     /tmp/ccxGaL4a.s:1112   .text:0000000000000460 .L0 
     /tmp/ccxGaL4a.s:1118   .text:000000000000046c .L0 
     /tmp/ccxGaL4a.s:1129   .text:000000000000046c .L0 
     /tmp/ccxGaL4a.s:22     .text:000000000000000c .L0 
     /tmp/ccxGaL4a.s:626    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccxGaL4a.s:807    .text:00000000000002e4 .L0 
     /tmp/ccxGaL4a.s:629    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccxGaL4a.s:819    .text:0000000000000308 .L0 
     /tmp/ccxGaL4a.s:632    .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccxGaL4a.s:824    .text:0000000000000318 .L0 
     /tmp/ccxGaL4a.s:836    .text:000000000000033c .L0 
     /tmp/ccxGaL4a.s:635    .rodata.str1.8:0000000000000020 .LC3
     /tmp/ccxGaL4a.s:841    .text:000000000000034c .L0 
     /tmp/ccxGaL4a.s:853    .text:0000000000000370 .L0 
     /tmp/ccxGaL4a.s:980    .text:00000000000003e4 .L0 
     /tmp/ccxGaL4a.s:991    .text:0000000000000400 .L0 
     /tmp/ccxGaL4a.s:52     .text:0000000000000034 .L2
     /tmp/ccxGaL4a.s:41     .text:0000000000000028 .L1
     /tmp/ccxGaL4a.s:328    .text:0000000000000100 .L28
     /tmp/ccxGaL4a.s:360    .text:0000000000000130 .L29
     /tmp/ccxGaL4a.s:392    .text:0000000000000160 .L30
     /tmp/ccxGaL4a.s:407    .text:0000000000000170 .L31
     /tmp/ccxGaL4a.s:419    .text:000000000000017c .L32
     /tmp/ccxGaL4a.s:431    .text:000000000000018c .L33
     /tmp/ccxGaL4a.s:466    .text:00000000000001b8 .L34
     /tmp/ccxGaL4a.s:482    .text:00000000000001c8 .L35
     /tmp/ccxGaL4a.s:497    .text:00000000000001d8 .L36
     /tmp/ccxGaL4a.s:512    .text:00000000000001e8 .L37
     /tmp/ccxGaL4a.s:527    .text:00000000000001f8 .L38
     /tmp/ccxGaL4a.s:546    .text:0000000000000210 .L39
     /tmp/ccxGaL4a.s:355    .text:0000000000000128 .L40
     /tmp/ccxGaL4a.s:310    .text:00000000000000e4 .L7
     /tmp/ccxGaL4a.s:387    .text:0000000000000158 .L41
     /tmp/ccxGaL4a.s:562    .text:0000000000000220 .L42
     /tmp/ccxGaL4a.s:878    .text:000000000000039c .L50
     /tmp/ccxGaL4a.s:972    .text:00000000000003e4 .L51
     /tmp/ccxGaL4a.s:1103   .text:0000000000000460 .L52
     /tmp/ccxGaL4a.s:856    .text:0000000000000380 .L43
     /tmp/ccxGaL4a.s:1024   .text:0000000000000424 .L53
     /tmp/ccxGaL4a.s:1007   .text:0000000000000418 .L47
GAS LISTING /tmp/ccxGaL4a.s 			page 38


     /tmp/ccxGaL4a.s:345    .text:0000000000000110 .LEHB0
     /tmp/ccxGaL4a.s:113    .text:0000000000000060 .LFB41
     /tmp/ccxGaL4a.s:452    .text:00000000000001a0 .LEHE0
     /tmp/ccxGaL4a.s:460    .text:00000000000001ac .LEHB1
     /tmp/ccxGaL4a.s:463    .text:00000000000001b4 .LEHE1
     /tmp/ccxGaL4a.s:574    .text:0000000000000228 .L25
     /tmp/ccxGaL4a.s:475    .text:00000000000001bc .LEHB2
     /tmp/ccxGaL4a.s:557    .text:000000000000021c .LEHE2
     /tmp/ccxGaL4a.s:585    .text:000000000000023c .LEHB3
     /tmp/ccxGaL4a.s:588    .text:0000000000000244 .LEHE3
     /tmp/ccxGaL4a.s:3470   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxGaL4a.s:5645   .debug_str:000000000000096c .LASF212
     /tmp/ccxGaL4a.s:5709   .debug_str:0000000000000bb9 .LASF213
     /tmp/ccxGaL4a.s:5565   .debug_str:000000000000074d .LASF214
     /tmp/ccxGaL4a.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxGaL4a.s:1121   .text:000000000000046c .Letext0
     /tmp/ccxGaL4a.s:5295   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxGaL4a.s:5435   .debug_str:00000000000003ed .LASF0
     /tmp/ccxGaL4a.s:5467   .debug_str:00000000000004e6 .LASF1
     /tmp/ccxGaL4a.s:5585   .debug_str:00000000000007f3 .LASF2
     /tmp/ccxGaL4a.s:5591   .debug_str:0000000000000823 .LASF4
     /tmp/ccxGaL4a.s:5443   .debug_str:0000000000000429 .LASF3
     /tmp/ccxGaL4a.s:5307   .debug_str:000000000000006d .LASF5
     /tmp/ccxGaL4a.s:5553   .debug_str:000000000000070e .LASF6
     /tmp/ccxGaL4a.s:5537   .debug_str:00000000000006a5 .LASF7
     /tmp/ccxGaL4a.s:5457   .debug_str:00000000000004a9 .LASF8
     /tmp/ccxGaL4a.s:5411   .debug_str:000000000000032b .LASF9
     /tmp/ccxGaL4a.s:5423   .debug_str:0000000000000383 .LASF10
     /tmp/ccxGaL4a.s:5343   .debug_str:0000000000000141 .LASF11
     /tmp/ccxGaL4a.s:5403   .debug_str:00000000000002e8 .LASF12
     /tmp/ccxGaL4a.s:5355   .debug_str:0000000000000198 .LASF13
     /tmp/ccxGaL4a.s:5341   .debug_str:0000000000000131 .LASF14
     /tmp/ccxGaL4a.s:5627   .debug_str:000000000000090f .LASF15
     /tmp/ccxGaL4a.s:5385   .debug_str:0000000000000265 .LASF16
     /tmp/ccxGaL4a.s:5613   .debug_str:00000000000008a2 .LASF17
     /tmp/ccxGaL4a.s:5687   .debug_str:0000000000000b3e .LASF77
     /tmp/ccxGaL4a.s:5569   .debug_str:0000000000000780 .LASF21
     /tmp/ccxGaL4a.s:5471   .debug_str:0000000000000503 .LASF18
     /tmp/ccxGaL4a.s:5393   .debug_str:00000000000002a8 .LASF19
     /tmp/ccxGaL4a.s:5711   .debug_str:0000000000000bc7 .LASF20
     /tmp/ccxGaL4a.s:5667   .debug_str:0000000000000aae .LASF22
     /tmp/ccxGaL4a.s:5395   .debug_str:00000000000002b1 .LASF23
     /tmp/ccxGaL4a.s:5643   .debug_str:000000000000095f .LASF24
     /tmp/ccxGaL4a.s:5369   .debug_str:0000000000000210 .LASF25
     /tmp/ccxGaL4a.s:5429   .debug_str:00000000000003b8 .LASF58
     /tmp/ccxGaL4a.s:5433   .debug_str:00000000000003d5 .LASF60
     /tmp/ccxGaL4a.s:5661   .debug_str:0000000000000a87 .LASF26
     /tmp/ccxGaL4a.s:5657   .debug_str:0000000000000a69 .LASF28
     /tmp/ccxGaL4a.s:5581   .debug_str:00000000000007df .LASF30
     /tmp/ccxGaL4a.s:5521   .debug_str:0000000000000629 .LASF32
     /tmp/ccxGaL4a.s:5561   .debug_str:0000000000000733 .LASF27
     /tmp/ccxGaL4a.s:5563   .debug_str:000000000000073a .LASF29
     /tmp/ccxGaL4a.s:5515   .debug_str:0000000000000604 .LASF31
     /tmp/ccxGaL4a.s:5459   .debug_str:00000000000004bc .LASF33
     /tmp/ccxGaL4a.s:5707   .debug_str:0000000000000bb1 .LASF34
     /tmp/ccxGaL4a.s:5649   .debug_str:0000000000000a3d .LASF35
     /tmp/ccxGaL4a.s:5507   .debug_str:00000000000005e1 .LASF36
GAS LISTING /tmp/ccxGaL4a.s 			page 39


     /tmp/ccxGaL4a.s:5519   .debug_str:0000000000000615 .LASF37
     /tmp/ccxGaL4a.s:5475   .debug_str:0000000000000525 .LASF38
     /tmp/ccxGaL4a.s:5567   .debug_str:000000000000076c .LASF39
     /tmp/ccxGaL4a.s:5737   .debug_str:0000000000000c8f .LASF40
     /tmp/ccxGaL4a.s:5441   .debug_str:0000000000000415 .LASF41
     /tmp/ccxGaL4a.s:5623   .debug_str:00000000000008e9 .LASF42
     /tmp/ccxGaL4a.s:5597   .debug_str:0000000000000845 .LASF43
     /tmp/ccxGaL4a.s:5599   .debug_str:0000000000000858 .LASF44
     /tmp/ccxGaL4a.s:5349   .debug_str:000000000000015f .LASF45
     /tmp/ccxGaL4a.s:5381   .debug_str:0000000000000259 .LASF46
     /tmp/ccxGaL4a.s:5431   .debug_str:00000000000003c3 .LASF47
     /tmp/ccxGaL4a.s:5439   .debug_str:000000000000040f .LASF48
     /tmp/ccxGaL4a.s:5373   .debug_str:0000000000000234 .LASF49
     /tmp/ccxGaL4a.s:5309   .debug_str:0000000000000074 .LASF50
     /tmp/ccxGaL4a.s:5589   .debug_str:000000000000080b .LASF51
     /tmp/ccxGaL4a.s:5583   .debug_str:00000000000007e8 .LASF52
     /tmp/ccxGaL4a.s:5729   .debug_str:0000000000000c51 .LASF53
     /tmp/ccxGaL4a.s:5691   .debug_str:0000000000000b49 .LASF54
     /tmp/ccxGaL4a.s:5715   .debug_str:0000000000000bdb .LASF55
     /tmp/ccxGaL4a.s:5679   .debug_str:0000000000000aff .LASF56
     /tmp/ccxGaL4a.s:5497   .debug_str:00000000000005a4 .LASF57
     /tmp/ccxGaL4a.s:5701   .debug_str:0000000000000b92 .LASF59
     /tmp/ccxGaL4a.s:5421   .debug_str:0000000000000367 .LASF61
     /tmp/ccxGaL4a.s:5607   .debug_str:000000000000088a .LASF62
     /tmp/ccxGaL4a.s:5311   .debug_str:000000000000007f .LASF63
     /tmp/ccxGaL4a.s:5547   .debug_str:00000000000006df .LASF133
     /tmp/ccxGaL4a.s:5453   .debug_str:000000000000046a .LASF135
     /tmp/ccxGaL4a.s:5327   .debug_str:00000000000000cb .LASF64
     /tmp/ccxGaL4a.s:5625   .debug_str:00000000000008f0 .LASF66
     /tmp/ccxGaL4a.s:5659   .debug_str:0000000000000a7e .LASF65
     /tmp/ccxGaL4a.s:5437   .debug_str:00000000000003fa .LASF67
     /tmp/ccxGaL4a.s:5705   .debug_str:0000000000000ba6 .LASF68
     /tmp/ccxGaL4a.s:5639   .debug_str:000000000000093e .LASF69
     /tmp/ccxGaL4a.s:5483   .debug_str:0000000000000548 .LASF154
     /tmp/ccxGaL4a.s:5339   .debug_str:0000000000000127 .LASF70
     /tmp/ccxGaL4a.s:5357   .debug_str:00000000000001a8 .LASF71
     /tmp/ccxGaL4a.s:5449   .debug_str:0000000000000457 .LASF76
     /tmp/ccxGaL4a.s:5345   .debug_str:0000000000000150 .LASF72
     /tmp/ccxGaL4a.s:5319   .debug_str:00000000000000a9 .LASF73
     /tmp/ccxGaL4a.s:5465   .debug_str:00000000000004e1 .LASF74
     /tmp/ccxGaL4a.s:5673   .debug_str:0000000000000acb .LASF75
     /tmp/ccxGaL4a.s:5529   .debug_str:0000000000000669 .LASF78
     /tmp/ccxGaL4a.s:5523   .debug_str:000000000000063e .LASF79
     /tmp/ccxGaL4a.s:5517   .debug_str:000000000000060b .LASF80
     /tmp/ccxGaL4a.s:5653   .debug_str:0000000000000a5b .LASF81
     /tmp/ccxGaL4a.s:5575   .debug_str:00000000000007a7 .LASF83
     /tmp/ccxGaL4a.s:5401   .debug_str:00000000000002e2 .LASF82
     /tmp/ccxGaL4a.s:5407   .debug_str:00000000000002fc .LASF84
     /tmp/ccxGaL4a.s:5609   .debug_str:0000000000000894 .LASF85
     /tmp/ccxGaL4a.s:5363   .debug_str:00000000000001c7 .LASF86
     /tmp/ccxGaL4a.s:5541   .debug_str:00000000000006c1 .LASF87
     /tmp/ccxGaL4a.s:5663   .debug_str:0000000000000a90 .LASF215
     /tmp/ccxGaL4a.s:5621   .debug_str:00000000000008e4 .LASF88
     /tmp/ccxGaL4a.s:5509   .debug_str:00000000000005e9 .LASF89
     /tmp/ccxGaL4a.s:5501   .debug_str:00000000000005c1 .LASF90
     /tmp/ccxGaL4a.s:5615   .debug_str:00000000000008b8 .LASF91
     /tmp/ccxGaL4a.s:5397   .debug_str:00000000000002bd .LASF97
GAS LISTING /tmp/ccxGaL4a.s 			page 40


     /tmp/ccxGaL4a.s:5587   .debug_str:0000000000000801 .LASF216
     /tmp/ccxGaL4a.s:5573   .debug_str:0000000000000790 .LASF217
     /tmp/ccxGaL4a.s:5461   .debug_str:00000000000004cf .LASF92
     /tmp/ccxGaL4a.s:5333   .debug_str:00000000000000f3 .LASF93
     /tmp/ccxGaL4a.s:5479   .debug_str:0000000000000533 .LASF94
     /tmp/ccxGaL4a.s:5387   .debug_str:000000000000027b .LASF95
     /tmp/ccxGaL4a.s:5531   .debug_str:0000000000000679 .LASF96
     /tmp/ccxGaL4a.s:5683   .debug_str:0000000000000b19 .LASF98
     /tmp/ccxGaL4a.s:5741   .debug_str:0000000000000ca4 .LASF99
     /tmp/ccxGaL4a.s:5727   .debug_str:0000000000000c36 .LASF100
     /tmp/ccxGaL4a.s:5605   .debug_str:000000000000087f .LASF101
     /tmp/ccxGaL4a.s:5455   .debug_str:000000000000048c .LASF102
     /tmp/ccxGaL4a.s:5551   .debug_str:0000000000000705 .LASF103
     /tmp/ccxGaL4a.s:5301   .debug_str:000000000000001f .LASF104
     /tmp/ccxGaL4a.s:5633   .debug_str:0000000000000927 .LASF105
     /tmp/ccxGaL4a.s:5593   .debug_str:000000000000082a .LASF106
     /tmp/ccxGaL4a.s:5305   .debug_str:0000000000000061 .LASF107
     /tmp/ccxGaL4a.s:5487   .debug_str:000000000000055b .LASF108
     /tmp/ccxGaL4a.s:5665   .debug_str:0000000000000a95 .LASF109
     /tmp/ccxGaL4a.s:5647   .debug_str:0000000000000a30 .LASF110
     /tmp/ccxGaL4a.s:5699   .debug_str:0000000000000b70 .LASF111
     /tmp/ccxGaL4a.s:5525   .debug_str:0000000000000643 .LASF191
     /tmp/ccxGaL4a.s:5297   .debug_str:0000000000000000 .LASF112
     /tmp/ccxGaL4a.s:5365   .debug_str:00000000000001e7 .LASF113
     /tmp/ccxGaL4a.s:5337   .debug_str:0000000000000116 .LASF114
     /tmp/ccxGaL4a.s:5527   .debug_str:0000000000000648 .LASF115
     /tmp/ccxGaL4a.s:5725   .debug_str:0000000000000c30 .LASF116
     /tmp/ccxGaL4a.s:5681   .debug_str:0000000000000b09 .LASF117
     /tmp/ccxGaL4a.s:5641   .debug_str:0000000000000957 .LASF118
     /tmp/ccxGaL4a.s:5405   .debug_str:00000000000002f7 .LASF119
     /tmp/ccxGaL4a.s:5391   .debug_str:000000000000029c .LASF120
     /tmp/ccxGaL4a.s:5495   .debug_str:000000000000058c .LASF121
     /tmp/ccxGaL4a.s:5731   .debug_str:0000000000000c69 .LASF122
     /tmp/ccxGaL4a.s:5419   .debug_str:000000000000035b .LASF123
     /tmp/ccxGaL4a.s:5299   .debug_str:000000000000000f .LASF124
     /tmp/ccxGaL4a.s:5481   .debug_str:000000000000053b .LASF125
     /tmp/ccxGaL4a.s:5719   .debug_str:0000000000000bfd .LASF218
     /tmp/ccxGaL4a.s:5375   .debug_str:0000000000000246 .LASF126
     /tmp/ccxGaL4a.s:5695   .debug_str:0000000000000b5b .LASF127
     /tmp/ccxGaL4a.s:5655   .debug_str:0000000000000a61 .LASF128
     /tmp/ccxGaL4a.s:5651   .debug_str:0000000000000a51 .LASF129
     /tmp/ccxGaL4a.s:5447   .debug_str:000000000000044a .LASF130
     /tmp/ccxGaL4a.s:5451   .debug_str:0000000000000462 .LASF131
     /tmp/ccxGaL4a.s:5579   .debug_str:00000000000007cf .LASF132
     /tmp/ccxGaL4a.s:5331   .debug_str:00000000000000e5 .LASF134
     /tmp/ccxGaL4a.s:5473   .debug_str:000000000000050c .LASF136
     /tmp/ccxGaL4a.s:5723   .debug_str:0000000000000c22 .LASF137
     /tmp/ccxGaL4a.s:5303   .debug_str:0000000000000039 .LASF138
     /tmp/ccxGaL4a.s:5611   .debug_str:000000000000089d .LASF139
     /tmp/ccxGaL4a.s:5535   .debug_str:0000000000000696 .LASF140
     /tmp/ccxGaL4a.s:5577   .debug_str:00000000000007c4 .LASF141
     /tmp/ccxGaL4a.s:5595   .debug_str:000000000000082f .LASF142
     /tmp/ccxGaL4a.s:5543   .debug_str:00000000000006cb .LASF143
     /tmp/ccxGaL4a.s:5427   .debug_str:000000000000039e .LASF144
     /tmp/ccxGaL4a.s:5315   .debug_str:000000000000009b .LASF145
     /tmp/ccxGaL4a.s:5675   .debug_str:0000000000000ad2 .LASF146
     /tmp/ccxGaL4a.s:5377   .debug_str:000000000000024b .LASF147
GAS LISTING /tmp/ccxGaL4a.s 			page 41


     /tmp/ccxGaL4a.s:5351   .debug_str:0000000000000172 .LASF148
     /tmp/ccxGaL4a.s:5379   .debug_str:0000000000000254 .LASF149
     /tmp/ccxGaL4a.s:5697   .debug_str:0000000000000b61 .LASF150
     /tmp/ccxGaL4a.s:5629   .debug_str:000000000000091b .LASF151
     /tmp/ccxGaL4a.s:5533   .debug_str:0000000000000685 .LASF152
     /tmp/ccxGaL4a.s:5601   .debug_str:000000000000085f .LASF153
     /tmp/ccxGaL4a.s:5713   .debug_str:0000000000000bd0 .LASF219
     /tmp/ccxGaL4a.s:5511   .debug_str:00000000000005ee .LASF155
     /tmp/ccxGaL4a.s:5329   .debug_str:00000000000000dc .LASF156
     /tmp/ccxGaL4a.s:5555   .debug_str:0000000000000715 .LASF157
     /tmp/ccxGaL4a.s:5335   .debug_str:0000000000000110 .LASF158
     /tmp/ccxGaL4a.s:5559   .debug_str:000000000000072b .LASF159
     /tmp/ccxGaL4a.s:5735   .debug_str:0000000000000c87 .LASF160
     /tmp/ccxGaL4a.s:5463   .debug_str:00000000000004d8 .LASF161
     /tmp/ccxGaL4a.s:5703   .debug_str:0000000000000ba1 .LASF162
     /tmp/ccxGaL4a.s:5571   .debug_str:000000000000078b .LASF163
     /tmp/ccxGaL4a.s:5485   .debug_str:0000000000000555 .LASF164
     /tmp/ccxGaL4a.s:5505   .debug_str:00000000000005d6 .LASF165
     /tmp/ccxGaL4a.s:5415   .debug_str:0000000000000341 .LASF166
     /tmp/ccxGaL4a.s:5513   .debug_str:00000000000005f5 .LASF167
     /tmp/ccxGaL4a.s:5733   .debug_str:0000000000000c76 .LASF168
     /tmp/ccxGaL4a.s:5359   .debug_str:00000000000001ad .LASF169
     /tmp/ccxGaL4a.s:5425   .debug_str:0000000000000391 .LASF170
     /tmp/ccxGaL4a.s:5549   .debug_str:00000000000006f4 .LASF171
     /tmp/ccxGaL4a.s:5635   .debug_str:000000000000092f .LASF172
     /tmp/ccxGaL4a.s:5491   .debug_str:0000000000000575 .LASF173
     /tmp/ccxGaL4a.s:5347   .debug_str:0000000000000155 .LASF174
     /tmp/ccxGaL4a.s:5493   .debug_str:0000000000000580 .LASF175
     /tmp/ccxGaL4a.s:5361   .debug_str:00000000000001bb .LASF176
     /tmp/ccxGaL4a.s:5677   .debug_str:0000000000000af6 .LASF177
     /tmp/ccxGaL4a.s:5413   .debug_str:000000000000033b .LASF178
     /tmp/ccxGaL4a.s:5637   .debug_str:0000000000000939 .LASF179
     /tmp/ccxGaL4a.s:5383   .debug_str:000000000000025f .LASF180
     /tmp/ccxGaL4a.s:5489   .debug_str:0000000000000568 .LASF181
     /tmp/ccxGaL4a.s:5739   .debug_str:0000000000000c97 .LASF182
     /tmp/ccxGaL4a.s:5399   .debug_str:00000000000002d4 .LASF183
     /tmp/ccxGaL4a.s:5445   .debug_str:000000000000043b .LASF184
     /tmp/ccxGaL4a.s:5685   .debug_str:0000000000000b37 .LASF185
     /tmp/ccxGaL4a.s:5409   .debug_str:000000000000031a .LASF186
     /tmp/ccxGaL4a.s:5313   .debug_str:0000000000000095 .LASF187
     /tmp/ccxGaL4a.s:5321   .debug_str:00000000000000ae .LASF188
     /tmp/ccxGaL4a.s:5503   .debug_str:00000000000005c6 .LASF189
     /tmp/ccxGaL4a.s:5617   .debug_str:00000000000008cb .LASF190
     /tmp/ccxGaL4a.s:642    .text:0000000000000244 .LFB42
     /tmp/ccxGaL4a.s:1119   .text:000000000000046c .LFE42
     /tmp/ccxGaL4a.s:5631   .debug_str:0000000000000922 .LASF192
     /tmp/ccxGaL4a.s:5619   .debug_str:00000000000008dd .LASF193
     /tmp/ccxGaL4a.s:4687   .debug_loc:0000000000000000 .LLST30
     /tmp/ccxGaL4a.s:881    .text:000000000000039c .LBB204
     /tmp/ccxGaL4a.s:975    .text:00000000000003e4 .LBE204
     /tmp/ccxGaL4a.s:5689   .debug_str:0000000000000b44 .LASF194
     /tmp/ccxGaL4a.s:5693   .debug_str:0000000000000b53 .LASF195
     /tmp/ccxGaL4a.s:5325   .debug_str:00000000000000c4 .LASF196
     /tmp/ccxGaL4a.s:4706   .debug_loc:000000000000005c .LLST39
     /tmp/ccxGaL4a.s:883    .text:000000000000039c .LBB205
     /tmp/ccxGaL4a.s:898    .text:00000000000003a8 .LBE205
     /tmp/ccxGaL4a.s:904    .text:00000000000003b0 .LBB207
GAS LISTING /tmp/ccxGaL4a.s 			page 42


     /tmp/ccxGaL4a.s:919    .text:00000000000003bc .LBE207
     /tmp/ccxGaL4a.s:928    .text:00000000000003cc .LBB209
     /tmp/ccxGaL4a.s:939    .text:00000000000003d0 .LBE209
     /tmp/ccxGaL4a.s:4713   .debug_loc:000000000000007f .LLST40
     /tmp/ccxGaL4a.s:944    .text:00000000000003d4 .LBB211
     /tmp/ccxGaL4a.s:955    .text:00000000000003d8 .LBE211
     /tmp/ccxGaL4a.s:4720   .debug_loc:00000000000000a2 .LLST41
     /tmp/ccxGaL4a.s:960    .text:00000000000003dc .LBB213
     /tmp/ccxGaL4a.s:974    .text:00000000000003e4 .LBE213
     /tmp/ccxGaL4a.s:4727   .debug_loc:00000000000000c5 .LLST42
     /tmp/ccxGaL4a.s:926    .text:00000000000003cc .LVL68
     /tmp/ccxGaL4a.s:1028   .text:0000000000000424 .LBB190
     /tmp/ccxGaL4a.s:1106   .text:0000000000000460 .LBE190
     /tmp/ccxGaL4a.s:1030   .text:0000000000000424 .LBB191
     /tmp/ccxGaL4a.s:1045   .text:0000000000000430 .LBE191
     /tmp/ccxGaL4a.s:1049   .text:0000000000000434 .LBB193
     /tmp/ccxGaL4a.s:1064   .text:0000000000000440 .LBE193
     /tmp/ccxGaL4a.s:1075   .text:0000000000000450 .LBB195
     /tmp/ccxGaL4a.s:1086   .text:0000000000000454 .LBE195
     /tmp/ccxGaL4a.s:4734   .debug_loc:00000000000000e8 .LLST36
     /tmp/ccxGaL4a.s:1091   .text:0000000000000458 .LBB197
     /tmp/ccxGaL4a.s:1105   .text:0000000000000460 .LBE197
     /tmp/ccxGaL4a.s:4741   .debug_loc:000000000000010b .LLST37
     /tmp/ccxGaL4a.s:1070   .text:000000000000044c .LVL79
     /tmp/ccxGaL4a.s:750    .text:00000000000002c0 .LBB179
     /tmp/ccxGaL4a.s:857    .text:0000000000000380 .LBE179
     /tmp/ccxGaL4a.s:4748   .debug_loc:000000000000012e .LLST32
     /tmp/ccxGaL4a.s:5477   .debug_str:000000000000052d .LASF197
     /tmp/ccxGaL4a.s:4755   .debug_loc:0000000000000151 .LLST33
     /tmp/ccxGaL4a.s:4762   .debug_loc:0000000000000174 .LLST34
     /tmp/ccxGaL4a.s:752    .text:00000000000002c0 .LBB180
     /tmp/ccxGaL4a.s:768    .text:00000000000002cc .LBE180
     /tmp/ccxGaL4a.s:770    .text:00000000000002cc .LBB182
     /tmp/ccxGaL4a.s:786    .text:00000000000002d8 .LBE182
     /tmp/ccxGaL4a.s:788    .text:00000000000002d8 .LBB184
     /tmp/ccxGaL4a.s:804    .text:00000000000002e4 .LBE184
     /tmp/ccxGaL4a.s:809    .text:00000000000002f4 .LVL58
     /tmp/ccxGaL4a.s:816    .text:0000000000000308 .LVL59
     /tmp/ccxGaL4a.s:821    .text:0000000000000318 .LVL60
     /tmp/ccxGaL4a.s:826    .text:0000000000000328 .LVL61
     /tmp/ccxGaL4a.s:833    .text:000000000000033c .LVL62
     /tmp/ccxGaL4a.s:838    .text:000000000000034c .LVL63
     /tmp/ccxGaL4a.s:843    .text:000000000000035c .LVL64
     /tmp/ccxGaL4a.s:850    .text:0000000000000370 .LVL65
     /tmp/ccxGaL4a.s:855    .text:0000000000000380 .LVL66
     /tmp/ccxGaL4a.s:662    .text:0000000000000260 .LBB172
     /tmp/ccxGaL4a.s:706    .text:0000000000000288 .LBE172
     /tmp/ccxGaL4a.s:4769   .debug_loc:0000000000000197 .LLST31
     /tmp/ccxGaL4a.s:708    .text:0000000000000288 .LBB174
     /tmp/ccxGaL4a.s:724    .text:0000000000000294 .LBE174
     /tmp/ccxGaL4a.s:994    .text:000000000000040c .LBB188
     /tmp/ccxGaL4a.s:1002   .text:0000000000000410 .LBE188
     /tmp/ccxGaL4a.s:4778   .debug_loc:00000000000001bd .LLST35
     /tmp/ccxGaL4a.s:1011   .text:0000000000000418 .LBB199
     /tmp/ccxGaL4a.s:1026   .text:0000000000000424 .LBE199
     /tmp/ccxGaL4a.s:4785   .debug_loc:00000000000001e0 .LLST38
     /tmp/ccxGaL4a.s:987    .text:0000000000000400 .LVL74
GAS LISTING /tmp/ccxGaL4a.s 			page 43


     /tmp/ccxGaL4a.s:1113   .text:0000000000000468 .LVL84
     /tmp/ccxGaL4a.s:598    .text:0000000000000244 .LFE41
     /tmp/ccxGaL4a.s:4793   .debug_loc:0000000000000204 .LLST2
     /tmp/ccxGaL4a.s:5389   .debug_str:0000000000000297 .LASF198
     /tmp/ccxGaL4a.s:4939   .debug_loc:0000000000000429 .LLST3
     /tmp/ccxGaL4a.s:331    .text:0000000000000100 .LBB78
     /tmp/ccxGaL4a.s:361    .text:0000000000000130 .LBE78
     /tmp/ccxGaL4a.s:5499   .debug_str:00000000000005ba .LASF199
     /tmp/ccxGaL4a.s:5005   .debug_loc:0000000000000559 .LLST4
     /tmp/ccxGaL4a.s:5557   .debug_str:000000000000071d .LASF200
     /tmp/ccxGaL4a.s:5012   .debug_loc:000000000000057c .LLST5
     /tmp/ccxGaL4a.s:5024   .debug_loc:00000000000005b3 .LLST6
     /tmp/ccxGaL4a.s:5036   .debug_loc:00000000000005ea .LLST7
     /tmp/ccxGaL4a.s:347    .text:0000000000000118 .LVL10
     /tmp/ccxGaL4a.s:364    .text:0000000000000130 .LBB158
     /tmp/ccxGaL4a.s:393    .text:0000000000000160 .LBE158
     /tmp/ccxGaL4a.s:5048   .debug_loc:0000000000000621 .LLST26
     /tmp/ccxGaL4a.s:5055   .debug_loc:0000000000000644 .LLST27
     /tmp/ccxGaL4a.s:5067   .debug_loc:000000000000067b .LLST28
     /tmp/ccxGaL4a.s:5079   .debug_loc:00000000000006b2 .LLST29
     /tmp/ccxGaL4a.s:379    .text:0000000000000148 .LVL14
     /tmp/ccxGaL4a.s:395    .text:0000000000000160 .LBB147
     /tmp/ccxGaL4a.s:408    .text:0000000000000170 .LBE147
     /tmp/ccxGaL4a.s:5091   .debug_loc:00000000000006e9 .LLST24
     /tmp/ccxGaL4a.s:5103   .debug_loc:0000000000000720 .LLST25
     /tmp/ccxGaL4a.s:402    .text:000000000000016c .LVL17
     /tmp/ccxGaL4a.s:410    .text:0000000000000170 .LBB137
     /tmp/ccxGaL4a.s:420    .text:000000000000017c .LBE137
     /tmp/ccxGaL4a.s:5110   .debug_loc:0000000000000743 .LLST23
     /tmp/ccxGaL4a.s:414    .text:0000000000000178 .LVL19
     /tmp/ccxGaL4a.s:5287   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxGaL4a.s:5117   .debug_loc:0000000000000766 .LLST19
     /tmp/ccxGaL4a.s:5323   .debug_str:00000000000000bf .LASF201
     /tmp/ccxGaL4a.s:5128   .debug_loc:000000000000079c .LLST20
     /tmp/ccxGaL4a.s:443    .text:0000000000000194 .LBB117
     /tmp/ccxGaL4a.s:456    .text:00000000000001a4 .LBE117
     /tmp/ccxGaL4a.s:5139   .debug_loc:00000000000007d2 .LLST21
     /tmp/ccxGaL4a.s:451    .text:00000000000001a0 .LVL26
     /tmp/ccxGaL4a.s:577    .text:000000000000022c .LBB119
     /tmp/ccxGaL4a.s:590    .text:0000000000000244 .LBE119
     /tmp/ccxGaL4a.s:5147   .debug_loc:00000000000007f6 .LLST22
     /tmp/ccxGaL4a.s:583    .text:0000000000000238 .LVL50
     /tmp/ccxGaL4a.s:462    .text:00000000000001b4 .LVL28
     /tmp/ccxGaL4a.s:469    .text:00000000000001b8 .LBB109
     /tmp/ccxGaL4a.s:483    .text:00000000000001c8 .LBE109
     /tmp/ccxGaL4a.s:5154   .debug_loc:0000000000000819 .LLST17
     /tmp/ccxGaL4a.s:5166   .debug_loc:0000000000000850 .LLST18
     /tmp/ccxGaL4a.s:477    .text:00000000000001c4 .LVL31
     /tmp/ccxGaL4a.s:485    .text:00000000000001c8 .LBB103
     /tmp/ccxGaL4a.s:498    .text:00000000000001d8 .LBE103
     /tmp/ccxGaL4a.s:5173   .debug_loc:0000000000000873 .LLST15
     /tmp/ccxGaL4a.s:5185   .debug_loc:00000000000008aa .LLST16
     /tmp/ccxGaL4a.s:492    .text:00000000000001d4 .LVL34
     /tmp/ccxGaL4a.s:500    .text:00000000000001d8 .LBB98
     /tmp/ccxGaL4a.s:513    .text:00000000000001e8 .LBE98
     /tmp/ccxGaL4a.s:5192   .debug_loc:00000000000008cd .LLST13
     /tmp/ccxGaL4a.s:5204   .debug_loc:0000000000000904 .LLST14
GAS LISTING /tmp/ccxGaL4a.s 			page 44


     /tmp/ccxGaL4a.s:507    .text:00000000000001e4 .LVL37
     /tmp/ccxGaL4a.s:515    .text:00000000000001e8 .LBB94
     /tmp/ccxGaL4a.s:528    .text:00000000000001f8 .LBE94
     /tmp/ccxGaL4a.s:5545   .debug_str:00000000000006da .LASF202
     /tmp/ccxGaL4a.s:5211   .debug_loc:0000000000000927 .LLST11
     /tmp/ccxGaL4a.s:5223   .debug_loc:000000000000095e .LLST12
     /tmp/ccxGaL4a.s:522    .text:00000000000001f4 .LVL40
     /tmp/ccxGaL4a.s:530    .text:00000000000001f8 .LBB91
     /tmp/ccxGaL4a.s:547    .text:0000000000000210 .LBE91
     /tmp/ccxGaL4a.s:5230   .debug_loc:0000000000000981 .LLST10
     /tmp/ccxGaL4a.s:541    .text:000000000000020c .LVL44
     /tmp/ccxGaL4a.s:549    .text:0000000000000210 .LBB90
     /tmp/ccxGaL4a.s:563    .text:0000000000000220 .LBE90
     /tmp/ccxGaL4a.s:5317   .debug_str:00000000000000a2 .LASF203
     /tmp/ccxGaL4a.s:5237   .debug_loc:00000000000009a4 .LLST8
     /tmp/ccxGaL4a.s:5249   .debug_loc:00000000000009db .LLST9
     /tmp/ccxGaL4a.s:556    .text:000000000000021c .LVL47
     /tmp/ccxGaL4a.s:425    .text:0000000000000184 .LVL21
     /tmp/ccxGaL4a.s:587    .text:0000000000000244 .LVL51
     /tmp/ccxGaL4a.s:78     .text:0000000000000040 .LFB40
     /tmp/ccxGaL4a.s:107    .text:0000000000000060 .LFE40
     /tmp/ccxGaL4a.s:10     .text:0000000000000000 .LFB39
     /tmp/ccxGaL4a.s:72     .text:0000000000000040 .LFE39
     /tmp/ccxGaL4a.s:29     .text:0000000000000020 .LBB73
     /tmp/ccxGaL4a.s:43     .text:0000000000000028 .LBE73
     /tmp/ccxGaL4a.s:5256   .debug_loc:00000000000009fe .LLST0
     /tmp/ccxGaL4a.s:56     .text:0000000000000034 .LBB75
     /tmp/ccxGaL4a.s:68     .text:000000000000003c .LBE75
     /tmp/ccxGaL4a.s:5265   .debug_loc:0000000000000a24 .LLST1
     /tmp/ccxGaL4a.s:5669   .debug_str:0000000000000abd .LASF204
     /tmp/ccxGaL4a.s:5367   .debug_str:000000000000020b .LASF220
     /tmp/ccxGaL4a.s:5469   .debug_str:00000000000004f9 .LASF205
     /tmp/ccxGaL4a.s:5671   .debug_str:0000000000000ac6 .LASF206
     /tmp/ccxGaL4a.s:5353   .debug_str:0000000000000185 .LASF207
     /tmp/ccxGaL4a.s:5717   .debug_str:0000000000000bf1 .LASF209
     /tmp/ccxGaL4a.s:5603   .debug_str:0000000000000870 .LASF208
     /tmp/ccxGaL4a.s:5539   .debug_str:00000000000006b8 .LASF210
     /tmp/ccxGaL4a.s:5417   .debug_str:000000000000034b .LASF211
     /tmp/ccxGaL4a.s:5721   .debug_str:0000000000000c13 .LASF221
     /tmp/ccxGaL4a.s:5371   .debug_str:000000000000021c .LASF222
     /tmp/ccxGaL4a.s:722    .text:0000000000000294 .LVL54
     /tmp/ccxGaL4a.s:877    .text:000000000000039c .LVL67
     /tmp/ccxGaL4a.s:971    .text:00000000000003e4 .LVL73
     /tmp/ccxGaL4a.s:1102   .text:0000000000000460 .LVL83
     /tmp/ccxGaL4a.s:936    .text:00000000000003d0 .LVL69
     /tmp/ccxGaL4a.s:943    .text:00000000000003d4 .LVL70
     /tmp/ccxGaL4a.s:952    .text:00000000000003d8 .LVL71
     /tmp/ccxGaL4a.s:959    .text:00000000000003dc .LVL72
     /tmp/ccxGaL4a.s:1074   .text:0000000000000450 .LVL80
     /tmp/ccxGaL4a.s:1083   .text:0000000000000454 .LVL81
     /tmp/ccxGaL4a.s:1090   .text:0000000000000458 .LVL82
     /tmp/ccxGaL4a.s:766    .text:00000000000002cc .LVL55
     /tmp/ccxGaL4a.s:784    .text:00000000000002d8 .LVL56
     /tmp/ccxGaL4a.s:802    .text:00000000000002e4 .LVL57
     /tmp/ccxGaL4a.s:661    .text:0000000000000260 .LVL52
     /tmp/ccxGaL4a.s:704    .text:0000000000000288 .LVL53
     /tmp/ccxGaL4a.s:993    .text:000000000000040c .LVL75
GAS LISTING /tmp/ccxGaL4a.s 			page 45


     /tmp/ccxGaL4a.s:1000   .text:0000000000000410 .LVL76
     /tmp/ccxGaL4a.s:1010   .text:0000000000000418 .LVL77
     /tmp/ccxGaL4a.s:1023   .text:0000000000000424 .LVL78
     /tmp/ccxGaL4a.s:118    .text:0000000000000060 .LVL4
     /tmp/ccxGaL4a.s:309    .text:00000000000000e4 .LVL6
     /tmp/ccxGaL4a.s:327    .text:0000000000000100 .LVL7
     /tmp/ccxGaL4a.s:344    .text:0000000000000110 .LVL9
     /tmp/ccxGaL4a.s:359    .text:0000000000000130 .LVL11
     /tmp/ccxGaL4a.s:377    .text:0000000000000140 .LVL13
     /tmp/ccxGaL4a.s:391    .text:0000000000000160 .LVL15
     /tmp/ccxGaL4a.s:400    .text:0000000000000164 .LVL16
     /tmp/ccxGaL4a.s:406    .text:0000000000000170 .LVL18
     /tmp/ccxGaL4a.s:418    .text:000000000000017c .LVL20
     /tmp/ccxGaL4a.s:430    .text:000000000000018c .LVL22
     /tmp/ccxGaL4a.s:449    .text:0000000000000198 .LVL25
     /tmp/ccxGaL4a.s:465    .text:00000000000001b8 .LVL29
     /tmp/ccxGaL4a.s:474    .text:00000000000001bc .LVL30
     /tmp/ccxGaL4a.s:481    .text:00000000000001c8 .LVL32
     /tmp/ccxGaL4a.s:490    .text:00000000000001cc .LVL33
     /tmp/ccxGaL4a.s:496    .text:00000000000001d8 .LVL35
     /tmp/ccxGaL4a.s:505    .text:00000000000001dc .LVL36
     /tmp/ccxGaL4a.s:511    .text:00000000000001e8 .LVL38
     /tmp/ccxGaL4a.s:520    .text:00000000000001ec .LVL39
     /tmp/ccxGaL4a.s:526    .text:00000000000001f8 .LVL41
     /tmp/ccxGaL4a.s:539    .text:0000000000000204 .LVL43
     /tmp/ccxGaL4a.s:545    .text:0000000000000210 .LVL45
     /tmp/ccxGaL4a.s:554    .text:0000000000000214 .LVL46
     /tmp/ccxGaL4a.s:136    .text:0000000000000080 .LVL5
     /tmp/ccxGaL4a.s:534    .text:00000000000001fc .LVL42
     /tmp/ccxGaL4a.s:335    .text:0000000000000104 .LVL8
     /tmp/ccxGaL4a.s:368    .text:0000000000000134 .LVL12
     /tmp/ccxGaL4a.s:437    .text:0000000000000190 .LVL23
     /tmp/ccxGaL4a.s:561    .text:0000000000000220 .LVL48
     /tmp/ccxGaL4a.s:576    .text:000000000000022c .LVL49
     /tmp/ccxGaL4a.s:441    .text:0000000000000194 .LVL24
     /tmp/ccxGaL4a.s:454    .text:00000000000001a4 .LVL27
     /tmp/ccxGaL4a.s:28     .text:0000000000000020 .LVL0
     /tmp/ccxGaL4a.s:39     .text:0000000000000028 .LVL1
     /tmp/ccxGaL4a.s:55     .text:0000000000000034 .LVL2
     /tmp/ccxGaL4a.s:65     .text:000000000000003c .LVL3
     /tmp/ccxGaL4a.s:1130   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxGaL4a.s:433    .text:000000000000018c .LBB116
     /tmp/ccxGaL4a.s:467    .text:00000000000001b8 .LBE116
     /tmp/ccxGaL4a.s:570    .text:0000000000000220 .LBB122
     /tmp/ccxGaL4a.s:591    .text:0000000000000244 .LBE122
     /tmp/ccxGaL4a.s:601    .gcc_except_table:0000000000000000 .LLSDA41

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB14createThreadNSEPFvPvES0_Pm
_ZN3TCB5startEv
_ZN3TCB4exitEv
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator5allocEm
_ZN4_semC1EPPS_j
_ZN4_sem5closeEv
GAS LISTING /tmp/ccxGaL4a.s 			page 46


_ZN4_sem4waitEv
_ZN4_sem6signalEv
_ZN3TCB10time_sleepEm
_ZN15MemoryAllocator5freeeEPv
_Unwind_Resume
__gxx_personality_v0
_Z11printStringPKc
_Z8printIntiii
_ZN3TCB16timeSliceCounterE
_ZN3TCB14checkForWakeUpEv
console_handler
